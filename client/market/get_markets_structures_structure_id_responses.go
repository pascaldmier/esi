package market

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/pascaldmier/esi/models"
)

// GetMarketsStructuresStructureIDReader is a Reader for the GetMarketsStructuresStructureID structure.
type GetMarketsStructuresStructureIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMarketsStructuresStructureIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMarketsStructuresStructureIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetMarketsStructuresStructureIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetMarketsStructuresStructureIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMarketsStructuresStructureIDOK creates a GetMarketsStructuresStructureIDOK with default headers values
func NewGetMarketsStructuresStructureIDOK() *GetMarketsStructuresStructureIDOK {
	return &GetMarketsStructuresStructureIDOK{}
}

/*GetMarketsStructuresStructureIDOK handles this case with default header values.

A list of orders
*/
type GetMarketsStructuresStructureIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload models.GetMarketsStructuresStructureIDOKBody
}

func (o *GetMarketsStructuresStructureIDOK) Error() string {
	return fmt.Sprintf("[GET /markets/structures/{structure_id}/][%d] getMarketsStructuresStructureIdOK  %+v", 200, o.Payload)
}

func (o *GetMarketsStructuresStructureIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsStructuresStructureIDForbidden creates a GetMarketsStructuresStructureIDForbidden with default headers values
func NewGetMarketsStructuresStructureIDForbidden() *GetMarketsStructuresStructureIDForbidden {
	return &GetMarketsStructuresStructureIDForbidden{}
}

/*GetMarketsStructuresStructureIDForbidden handles this case with default header values.

Forbidden
*/
type GetMarketsStructuresStructureIDForbidden struct {
	Payload *models.GetMarketsStructuresStructureIDForbiddenBody
}

func (o *GetMarketsStructuresStructureIDForbidden) Error() string {
	return fmt.Sprintf("[GET /markets/structures/{structure_id}/][%d] getMarketsStructuresStructureIdForbidden  %+v", 403, o.Payload)
}

func (o *GetMarketsStructuresStructureIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetMarketsStructuresStructureIDForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMarketsStructuresStructureIDInternalServerError creates a GetMarketsStructuresStructureIDInternalServerError with default headers values
func NewGetMarketsStructuresStructureIDInternalServerError() *GetMarketsStructuresStructureIDInternalServerError {
	return &GetMarketsStructuresStructureIDInternalServerError{}
}

/*GetMarketsStructuresStructureIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetMarketsStructuresStructureIDInternalServerError struct {
	Payload *models.GetMarketsStructuresStructureIDInternalServerErrorBody
}

func (o *GetMarketsStructuresStructureIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /markets/structures/{structure_id}/][%d] getMarketsStructuresStructureIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMarketsStructuresStructureIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetMarketsStructuresStructureIDInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
