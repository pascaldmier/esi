package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDShipOKCode is the HTTP code returned for type GetCharactersCharacterIDShipOK
const GetCharactersCharacterIDShipOKCode int = 200

/*GetCharactersCharacterIDShipOK Get the current ship type, name and id

swagger:response getCharactersCharacterIdShipOK
*/
type GetCharactersCharacterIDShipOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDShipOKBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDShipOK creates GetCharactersCharacterIDShipOK with default headers values
func NewGetCharactersCharacterIDShipOK() *GetCharactersCharacterIDShipOK {
	return &GetCharactersCharacterIDShipOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id ship o k response
func (o *GetCharactersCharacterIDShipOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDShipOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id ship o k response
func (o *GetCharactersCharacterIDShipOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id ship o k response
func (o *GetCharactersCharacterIDShipOK) WithExpires(expires string) *GetCharactersCharacterIDShipOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id ship o k response
func (o *GetCharactersCharacterIDShipOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id ship o k response
func (o *GetCharactersCharacterIDShipOK) WithLastModified(lastModified string) *GetCharactersCharacterIDShipOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id ship o k response
func (o *GetCharactersCharacterIDShipOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id ship o k response
func (o *GetCharactersCharacterIDShipOK) WithPayload(payload *models.GetCharactersCharacterIDShipOKBody) *GetCharactersCharacterIDShipOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id ship o k response
func (o *GetCharactersCharacterIDShipOK) SetPayload(payload *models.GetCharactersCharacterIDShipOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDShipOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDShipForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDShipForbidden
const GetCharactersCharacterIDShipForbiddenCode int = 403

/*GetCharactersCharacterIDShipForbidden Forbidden

swagger:response getCharactersCharacterIdShipForbidden
*/
type GetCharactersCharacterIDShipForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDShipForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDShipForbidden creates GetCharactersCharacterIDShipForbidden with default headers values
func NewGetCharactersCharacterIDShipForbidden() *GetCharactersCharacterIDShipForbidden {
	return &GetCharactersCharacterIDShipForbidden{}
}

// WithPayload adds the payload to the get characters character Id ship forbidden response
func (o *GetCharactersCharacterIDShipForbidden) WithPayload(payload *models.GetCharactersCharacterIDShipForbiddenBody) *GetCharactersCharacterIDShipForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id ship forbidden response
func (o *GetCharactersCharacterIDShipForbidden) SetPayload(payload *models.GetCharactersCharacterIDShipForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDShipForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDShipInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDShipInternalServerError
const GetCharactersCharacterIDShipInternalServerErrorCode int = 500

/*GetCharactersCharacterIDShipInternalServerError Internal server error

swagger:response getCharactersCharacterIdShipInternalServerError
*/
type GetCharactersCharacterIDShipInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDShipInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDShipInternalServerError creates GetCharactersCharacterIDShipInternalServerError with default headers values
func NewGetCharactersCharacterIDShipInternalServerError() *GetCharactersCharacterIDShipInternalServerError {
	return &GetCharactersCharacterIDShipInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id ship internal server error response
func (o *GetCharactersCharacterIDShipInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDShipInternalServerErrorBody) *GetCharactersCharacterIDShipInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id ship internal server error response
func (o *GetCharactersCharacterIDShipInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDShipInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDShipInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
