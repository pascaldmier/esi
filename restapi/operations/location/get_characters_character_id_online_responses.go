package location

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDOnlineOKCode is the HTTP code returned for type GetCharactersCharacterIDOnlineOK
const GetCharactersCharacterIDOnlineOKCode int = 200

/*GetCharactersCharacterIDOnlineOK Boolean of if the character is currently online

swagger:response getCharactersCharacterIdOnlineOK
*/
type GetCharactersCharacterIDOnlineOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*200 ok boolean
	  In: Body
	*/
	Payload bool `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDOnlineOK creates GetCharactersCharacterIDOnlineOK with default headers values
func NewGetCharactersCharacterIDOnlineOK() *GetCharactersCharacterIDOnlineOK {
	return &GetCharactersCharacterIDOnlineOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id online o k response
func (o *GetCharactersCharacterIDOnlineOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDOnlineOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id online o k response
func (o *GetCharactersCharacterIDOnlineOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id online o k response
func (o *GetCharactersCharacterIDOnlineOK) WithExpires(expires string) *GetCharactersCharacterIDOnlineOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id online o k response
func (o *GetCharactersCharacterIDOnlineOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id online o k response
func (o *GetCharactersCharacterIDOnlineOK) WithLastModified(lastModified string) *GetCharactersCharacterIDOnlineOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id online o k response
func (o *GetCharactersCharacterIDOnlineOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id online o k response
func (o *GetCharactersCharacterIDOnlineOK) WithPayload(payload bool) *GetCharactersCharacterIDOnlineOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id online o k response
func (o *GetCharactersCharacterIDOnlineOK) SetPayload(payload bool) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDOnlineOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetCharactersCharacterIDOnlineForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDOnlineForbidden
const GetCharactersCharacterIDOnlineForbiddenCode int = 403

/*GetCharactersCharacterIDOnlineForbidden Forbidden

swagger:response getCharactersCharacterIdOnlineForbidden
*/
type GetCharactersCharacterIDOnlineForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDOnlineForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDOnlineForbidden creates GetCharactersCharacterIDOnlineForbidden with default headers values
func NewGetCharactersCharacterIDOnlineForbidden() *GetCharactersCharacterIDOnlineForbidden {
	return &GetCharactersCharacterIDOnlineForbidden{}
}

// WithPayload adds the payload to the get characters character Id online forbidden response
func (o *GetCharactersCharacterIDOnlineForbidden) WithPayload(payload *models.GetCharactersCharacterIDOnlineForbiddenBody) *GetCharactersCharacterIDOnlineForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id online forbidden response
func (o *GetCharactersCharacterIDOnlineForbidden) SetPayload(payload *models.GetCharactersCharacterIDOnlineForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDOnlineForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDOnlineInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDOnlineInternalServerError
const GetCharactersCharacterIDOnlineInternalServerErrorCode int = 500

/*GetCharactersCharacterIDOnlineInternalServerError Internal server error

swagger:response getCharactersCharacterIdOnlineInternalServerError
*/
type GetCharactersCharacterIDOnlineInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDOnlineInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDOnlineInternalServerError creates GetCharactersCharacterIDOnlineInternalServerError with default headers values
func NewGetCharactersCharacterIDOnlineInternalServerError() *GetCharactersCharacterIDOnlineInternalServerError {
	return &GetCharactersCharacterIDOnlineInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id online internal server error response
func (o *GetCharactersCharacterIDOnlineInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDOnlineInternalServerErrorBody) *GetCharactersCharacterIDOnlineInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id online internal server error response
func (o *GetCharactersCharacterIDOnlineInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDOnlineInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDOnlineInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
