package user_interface

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// PostUIAutopilotWaypointNoContentCode is the HTTP code returned for type PostUIAutopilotWaypointNoContent
const PostUIAutopilotWaypointNoContentCode int = 204

/*PostUIAutopilotWaypointNoContent Open window request received

swagger:response postUiAutopilotWaypointNoContent
*/
type PostUIAutopilotWaypointNoContent struct {
}

// NewPostUIAutopilotWaypointNoContent creates PostUIAutopilotWaypointNoContent with default headers values
func NewPostUIAutopilotWaypointNoContent() *PostUIAutopilotWaypointNoContent {
	return &PostUIAutopilotWaypointNoContent{}
}

// WriteResponse to the client
func (o *PostUIAutopilotWaypointNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

// PostUIAutopilotWaypointForbiddenCode is the HTTP code returned for type PostUIAutopilotWaypointForbidden
const PostUIAutopilotWaypointForbiddenCode int = 403

/*PostUIAutopilotWaypointForbidden Forbidden

swagger:response postUiAutopilotWaypointForbidden
*/
type PostUIAutopilotWaypointForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.PostUIAutopilotWaypointForbiddenBody `json:"body,omitempty"`
}

// NewPostUIAutopilotWaypointForbidden creates PostUIAutopilotWaypointForbidden with default headers values
func NewPostUIAutopilotWaypointForbidden() *PostUIAutopilotWaypointForbidden {
	return &PostUIAutopilotWaypointForbidden{}
}

// WithPayload adds the payload to the post Ui autopilot waypoint forbidden response
func (o *PostUIAutopilotWaypointForbidden) WithPayload(payload *models.PostUIAutopilotWaypointForbiddenBody) *PostUIAutopilotWaypointForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Ui autopilot waypoint forbidden response
func (o *PostUIAutopilotWaypointForbidden) SetPayload(payload *models.PostUIAutopilotWaypointForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUIAutopilotWaypointForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUIAutopilotWaypointInternalServerErrorCode is the HTTP code returned for type PostUIAutopilotWaypointInternalServerError
const PostUIAutopilotWaypointInternalServerErrorCode int = 500

/*PostUIAutopilotWaypointInternalServerError Internal server error

swagger:response postUiAutopilotWaypointInternalServerError
*/
type PostUIAutopilotWaypointInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.PostUIAutopilotWaypointInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostUIAutopilotWaypointInternalServerError creates PostUIAutopilotWaypointInternalServerError with default headers values
func NewPostUIAutopilotWaypointInternalServerError() *PostUIAutopilotWaypointInternalServerError {
	return &PostUIAutopilotWaypointInternalServerError{}
}

// WithPayload adds the payload to the post Ui autopilot waypoint internal server error response
func (o *PostUIAutopilotWaypointInternalServerError) WithPayload(payload *models.PostUIAutopilotWaypointInternalServerErrorBody) *PostUIAutopilotWaypointInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Ui autopilot waypoint internal server error response
func (o *PostUIAutopilotWaypointInternalServerError) SetPayload(payload *models.PostUIAutopilotWaypointInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUIAutopilotWaypointInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
