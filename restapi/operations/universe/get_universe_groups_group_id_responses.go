package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetUniverseGroupsGroupIDOKCode is the HTTP code returned for type GetUniverseGroupsGroupIDOK
const GetUniverseGroupsGroupIDOKCode int = 200

/*GetUniverseGroupsGroupIDOK Information about an item group

swagger:response getUniverseGroupsGroupIdOK
*/
type GetUniverseGroupsGroupIDOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*The language used in the response
	  Required: true
	*/
	ContentLanguage string `json:"Content-Language"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetUniverseGroupsGroupIDOKBody `json:"body,omitempty"`
}

// NewGetUniverseGroupsGroupIDOK creates GetUniverseGroupsGroupIDOK with default headers values
func NewGetUniverseGroupsGroupIDOK() *GetUniverseGroupsGroupIDOK {
	return &GetUniverseGroupsGroupIDOK{}
}

// WithCacheControl adds the cacheControl to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) WithCacheControl(cacheControl string) *GetUniverseGroupsGroupIDOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithContentLanguage adds the contentLanguage to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) WithContentLanguage(contentLanguage string) *GetUniverseGroupsGroupIDOK {
	o.ContentLanguage = contentLanguage
	return o
}

// SetContentLanguage sets the contentLanguage to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) SetContentLanguage(contentLanguage string) {
	o.ContentLanguage = contentLanguage
}

// WithExpires adds the expires to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) WithExpires(expires string) *GetUniverseGroupsGroupIDOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) WithLastModified(lastModified string) *GetUniverseGroupsGroupIDOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) WithPayload(payload *models.GetUniverseGroupsGroupIDOKBody) *GetUniverseGroupsGroupIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe groups group Id o k response
func (o *GetUniverseGroupsGroupIDOK) SetPayload(payload *models.GetUniverseGroupsGroupIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniverseGroupsGroupIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Content-Language

	contentLanguage := o.ContentLanguage
	if contentLanguage != "" {
		rw.Header().Set("Content-Language", contentLanguage)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUniverseGroupsGroupIDNotFoundCode is the HTTP code returned for type GetUniverseGroupsGroupIDNotFound
const GetUniverseGroupsGroupIDNotFoundCode int = 404

/*GetUniverseGroupsGroupIDNotFound Group not found

swagger:response getUniverseGroupsGroupIdNotFound
*/
type GetUniverseGroupsGroupIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GetUniverseGroupsGroupIDNotFoundBody `json:"body,omitempty"`
}

// NewGetUniverseGroupsGroupIDNotFound creates GetUniverseGroupsGroupIDNotFound with default headers values
func NewGetUniverseGroupsGroupIDNotFound() *GetUniverseGroupsGroupIDNotFound {
	return &GetUniverseGroupsGroupIDNotFound{}
}

// WithPayload adds the payload to the get universe groups group Id not found response
func (o *GetUniverseGroupsGroupIDNotFound) WithPayload(payload *models.GetUniverseGroupsGroupIDNotFoundBody) *GetUniverseGroupsGroupIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe groups group Id not found response
func (o *GetUniverseGroupsGroupIDNotFound) SetPayload(payload *models.GetUniverseGroupsGroupIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniverseGroupsGroupIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUniverseGroupsGroupIDInternalServerErrorCode is the HTTP code returned for type GetUniverseGroupsGroupIDInternalServerError
const GetUniverseGroupsGroupIDInternalServerErrorCode int = 500

/*GetUniverseGroupsGroupIDInternalServerError Internal server error

swagger:response getUniverseGroupsGroupIdInternalServerError
*/
type GetUniverseGroupsGroupIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetUniverseGroupsGroupIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetUniverseGroupsGroupIDInternalServerError creates GetUniverseGroupsGroupIDInternalServerError with default headers values
func NewGetUniverseGroupsGroupIDInternalServerError() *GetUniverseGroupsGroupIDInternalServerError {
	return &GetUniverseGroupsGroupIDInternalServerError{}
}

// WithPayload adds the payload to the get universe groups group Id internal server error response
func (o *GetUniverseGroupsGroupIDInternalServerError) WithPayload(payload *models.GetUniverseGroupsGroupIDInternalServerErrorBody) *GetUniverseGroupsGroupIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe groups group Id internal server error response
func (o *GetUniverseGroupsGroupIDInternalServerError) SetPayload(payload *models.GetUniverseGroupsGroupIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniverseGroupsGroupIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
