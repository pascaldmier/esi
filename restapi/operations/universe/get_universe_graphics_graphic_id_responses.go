package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetUniverseGraphicsGraphicIDOKCode is the HTTP code returned for type GetUniverseGraphicsGraphicIDOK
const GetUniverseGraphicsGraphicIDOKCode int = 200

/*GetUniverseGraphicsGraphicIDOK Information about a graphic

swagger:response getUniverseGraphicsGraphicIdOK
*/
type GetUniverseGraphicsGraphicIDOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetUniverseGraphicsGraphicIDOKBody `json:"body,omitempty"`
}

// NewGetUniverseGraphicsGraphicIDOK creates GetUniverseGraphicsGraphicIDOK with default headers values
func NewGetUniverseGraphicsGraphicIDOK() *GetUniverseGraphicsGraphicIDOK {
	return &GetUniverseGraphicsGraphicIDOK{}
}

// WithCacheControl adds the cacheControl to the get universe graphics graphic Id o k response
func (o *GetUniverseGraphicsGraphicIDOK) WithCacheControl(cacheControl string) *GetUniverseGraphicsGraphicIDOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get universe graphics graphic Id o k response
func (o *GetUniverseGraphicsGraphicIDOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get universe graphics graphic Id o k response
func (o *GetUniverseGraphicsGraphicIDOK) WithExpires(expires string) *GetUniverseGraphicsGraphicIDOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get universe graphics graphic Id o k response
func (o *GetUniverseGraphicsGraphicIDOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get universe graphics graphic Id o k response
func (o *GetUniverseGraphicsGraphicIDOK) WithLastModified(lastModified string) *GetUniverseGraphicsGraphicIDOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get universe graphics graphic Id o k response
func (o *GetUniverseGraphicsGraphicIDOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get universe graphics graphic Id o k response
func (o *GetUniverseGraphicsGraphicIDOK) WithPayload(payload *models.GetUniverseGraphicsGraphicIDOKBody) *GetUniverseGraphicsGraphicIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe graphics graphic Id o k response
func (o *GetUniverseGraphicsGraphicIDOK) SetPayload(payload *models.GetUniverseGraphicsGraphicIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniverseGraphicsGraphicIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUniverseGraphicsGraphicIDNotFoundCode is the HTTP code returned for type GetUniverseGraphicsGraphicIDNotFound
const GetUniverseGraphicsGraphicIDNotFoundCode int = 404

/*GetUniverseGraphicsGraphicIDNotFound Graphic not found

swagger:response getUniverseGraphicsGraphicIdNotFound
*/
type GetUniverseGraphicsGraphicIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GetUniverseGraphicsGraphicIDNotFoundBody `json:"body,omitempty"`
}

// NewGetUniverseGraphicsGraphicIDNotFound creates GetUniverseGraphicsGraphicIDNotFound with default headers values
func NewGetUniverseGraphicsGraphicIDNotFound() *GetUniverseGraphicsGraphicIDNotFound {
	return &GetUniverseGraphicsGraphicIDNotFound{}
}

// WithPayload adds the payload to the get universe graphics graphic Id not found response
func (o *GetUniverseGraphicsGraphicIDNotFound) WithPayload(payload *models.GetUniverseGraphicsGraphicIDNotFoundBody) *GetUniverseGraphicsGraphicIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe graphics graphic Id not found response
func (o *GetUniverseGraphicsGraphicIDNotFound) SetPayload(payload *models.GetUniverseGraphicsGraphicIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniverseGraphicsGraphicIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUniverseGraphicsGraphicIDInternalServerErrorCode is the HTTP code returned for type GetUniverseGraphicsGraphicIDInternalServerError
const GetUniverseGraphicsGraphicIDInternalServerErrorCode int = 500

/*GetUniverseGraphicsGraphicIDInternalServerError Internal server error

swagger:response getUniverseGraphicsGraphicIdInternalServerError
*/
type GetUniverseGraphicsGraphicIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetUniverseGraphicsGraphicIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetUniverseGraphicsGraphicIDInternalServerError creates GetUniverseGraphicsGraphicIDInternalServerError with default headers values
func NewGetUniverseGraphicsGraphicIDInternalServerError() *GetUniverseGraphicsGraphicIDInternalServerError {
	return &GetUniverseGraphicsGraphicIDInternalServerError{}
}

// WithPayload adds the payload to the get universe graphics graphic Id internal server error response
func (o *GetUniverseGraphicsGraphicIDInternalServerError) WithPayload(payload *models.GetUniverseGraphicsGraphicIDInternalServerErrorBody) *GetUniverseGraphicsGraphicIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe graphics graphic Id internal server error response
func (o *GetUniverseGraphicsGraphicIDInternalServerError) SetPayload(payload *models.GetUniverseGraphicsGraphicIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniverseGraphicsGraphicIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
