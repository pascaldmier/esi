package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetUniversePlanetsPlanetIDOKCode is the HTTP code returned for type GetUniversePlanetsPlanetIDOK
const GetUniversePlanetsPlanetIDOKCode int = 200

/*GetUniversePlanetsPlanetIDOK Information about a planet

swagger:response getUniversePlanetsPlanetIdOK
*/
type GetUniversePlanetsPlanetIDOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetUniversePlanetsPlanetIDOKBody `json:"body,omitempty"`
}

// NewGetUniversePlanetsPlanetIDOK creates GetUniversePlanetsPlanetIDOK with default headers values
func NewGetUniversePlanetsPlanetIDOK() *GetUniversePlanetsPlanetIDOK {
	return &GetUniversePlanetsPlanetIDOK{}
}

// WithCacheControl adds the cacheControl to the get universe planets planet Id o k response
func (o *GetUniversePlanetsPlanetIDOK) WithCacheControl(cacheControl string) *GetUniversePlanetsPlanetIDOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get universe planets planet Id o k response
func (o *GetUniversePlanetsPlanetIDOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get universe planets planet Id o k response
func (o *GetUniversePlanetsPlanetIDOK) WithExpires(expires string) *GetUniversePlanetsPlanetIDOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get universe planets planet Id o k response
func (o *GetUniversePlanetsPlanetIDOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get universe planets planet Id o k response
func (o *GetUniversePlanetsPlanetIDOK) WithLastModified(lastModified string) *GetUniversePlanetsPlanetIDOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get universe planets planet Id o k response
func (o *GetUniversePlanetsPlanetIDOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get universe planets planet Id o k response
func (o *GetUniversePlanetsPlanetIDOK) WithPayload(payload *models.GetUniversePlanetsPlanetIDOKBody) *GetUniversePlanetsPlanetIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe planets planet Id o k response
func (o *GetUniversePlanetsPlanetIDOK) SetPayload(payload *models.GetUniversePlanetsPlanetIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniversePlanetsPlanetIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUniversePlanetsPlanetIDNotFoundCode is the HTTP code returned for type GetUniversePlanetsPlanetIDNotFound
const GetUniversePlanetsPlanetIDNotFoundCode int = 404

/*GetUniversePlanetsPlanetIDNotFound Planet not found

swagger:response getUniversePlanetsPlanetIdNotFound
*/
type GetUniversePlanetsPlanetIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GetUniversePlanetsPlanetIDNotFoundBody `json:"body,omitempty"`
}

// NewGetUniversePlanetsPlanetIDNotFound creates GetUniversePlanetsPlanetIDNotFound with default headers values
func NewGetUniversePlanetsPlanetIDNotFound() *GetUniversePlanetsPlanetIDNotFound {
	return &GetUniversePlanetsPlanetIDNotFound{}
}

// WithPayload adds the payload to the get universe planets planet Id not found response
func (o *GetUniversePlanetsPlanetIDNotFound) WithPayload(payload *models.GetUniversePlanetsPlanetIDNotFoundBody) *GetUniversePlanetsPlanetIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe planets planet Id not found response
func (o *GetUniversePlanetsPlanetIDNotFound) SetPayload(payload *models.GetUniversePlanetsPlanetIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniversePlanetsPlanetIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUniversePlanetsPlanetIDInternalServerErrorCode is the HTTP code returned for type GetUniversePlanetsPlanetIDInternalServerError
const GetUniversePlanetsPlanetIDInternalServerErrorCode int = 500

/*GetUniversePlanetsPlanetIDInternalServerError Internal server error

swagger:response getUniversePlanetsPlanetIdInternalServerError
*/
type GetUniversePlanetsPlanetIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetUniversePlanetsPlanetIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetUniversePlanetsPlanetIDInternalServerError creates GetUniversePlanetsPlanetIDInternalServerError with default headers values
func NewGetUniversePlanetsPlanetIDInternalServerError() *GetUniversePlanetsPlanetIDInternalServerError {
	return &GetUniversePlanetsPlanetIDInternalServerError{}
}

// WithPayload adds the payload to the get universe planets planet Id internal server error response
func (o *GetUniversePlanetsPlanetIDInternalServerError) WithPayload(payload *models.GetUniversePlanetsPlanetIDInternalServerErrorBody) *GetUniversePlanetsPlanetIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe planets planet Id internal server error response
func (o *GetUniversePlanetsPlanetIDInternalServerError) SetPayload(payload *models.GetUniversePlanetsPlanetIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniversePlanetsPlanetIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
