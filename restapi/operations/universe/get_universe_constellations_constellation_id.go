package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetUniverseConstellationsConstellationIDHandlerFunc turns a function with the right signature into a get universe constellations constellation id handler
type GetUniverseConstellationsConstellationIDHandlerFunc func(GetUniverseConstellationsConstellationIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUniverseConstellationsConstellationIDHandlerFunc) Handle(params GetUniverseConstellationsConstellationIDParams) middleware.Responder {
	return fn(params)
}

// GetUniverseConstellationsConstellationIDHandler interface for that can handle valid get universe constellations constellation id params
type GetUniverseConstellationsConstellationIDHandler interface {
	Handle(GetUniverseConstellationsConstellationIDParams) middleware.Responder
}

// NewGetUniverseConstellationsConstellationID creates a new http.Handler for the get universe constellations constellation id operation
func NewGetUniverseConstellationsConstellationID(ctx *middleware.Context, handler GetUniverseConstellationsConstellationIDHandler) *GetUniverseConstellationsConstellationID {
	return &GetUniverseConstellationsConstellationID{Context: ctx, Handler: handler}
}

/*GetUniverseConstellationsConstellationID swagger:route GET /universe/constellations/{constellation_id}/ Universe getUniverseConstellationsConstellationId

Get constellation information

Get information on a constellation

---

Alternate route: `/v1/universe/constellations/{constellation_id}/`

Alternate route: `/legacy/universe/constellations/{constellation_id}/`

Alternate route: `/dev/universe/constellations/{constellation_id}/`


---

This route expires daily at 11:05

*/
type GetUniverseConstellationsConstellationID struct {
	Context *middleware.Context
	Handler GetUniverseConstellationsConstellationIDHandler
}

func (o *GetUniverseConstellationsConstellationID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetUniverseConstellationsConstellationIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
