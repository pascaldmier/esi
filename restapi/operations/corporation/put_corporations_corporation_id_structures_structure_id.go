package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PutCorporationsCorporationIDStructuresStructureIDHandlerFunc turns a function with the right signature into a put corporations corporation id structures structure id handler
type PutCorporationsCorporationIDStructuresStructureIDHandlerFunc func(PutCorporationsCorporationIDStructuresStructureIDParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn PutCorporationsCorporationIDStructuresStructureIDHandlerFunc) Handle(params PutCorporationsCorporationIDStructuresStructureIDParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// PutCorporationsCorporationIDStructuresStructureIDHandler interface for that can handle valid put corporations corporation id structures structure id params
type PutCorporationsCorporationIDStructuresStructureIDHandler interface {
	Handle(PutCorporationsCorporationIDStructuresStructureIDParams, interface{}) middleware.Responder
}

// NewPutCorporationsCorporationIDStructuresStructureID creates a new http.Handler for the put corporations corporation id structures structure id operation
func NewPutCorporationsCorporationIDStructuresStructureID(ctx *middleware.Context, handler PutCorporationsCorporationIDStructuresStructureIDHandler) *PutCorporationsCorporationIDStructuresStructureID {
	return &PutCorporationsCorporationIDStructuresStructureID{Context: ctx, Handler: handler}
}

/*PutCorporationsCorporationIDStructuresStructureID swagger:route PUT /corporations/{corporation_id}/structures/{structure_id}/ Corporation putCorporationsCorporationIdStructuresStructureId

Update structure vulnerability schedule

Update the vulnerability window schedule of a corporation structure

---

Alternate route: `/v1/corporations/{corporation_id}/structures/{structure_id}/`

Alternate route: `/legacy/corporations/{corporation_id}/structures/{structure_id}/`

Alternate route: `/dev/corporations/{corporation_id}/structures/{structure_id}/`


*/
type PutCorporationsCorporationIDStructuresStructureID struct {
	Context *middleware.Context
	Handler PutCorporationsCorporationIDStructuresStructureIDHandler
}

func (o *PutCorporationsCorporationIDStructuresStructureID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPutCorporationsCorporationIDStructuresStructureIDParams()

	uprinc, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
