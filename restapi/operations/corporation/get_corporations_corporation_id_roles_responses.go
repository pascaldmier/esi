package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCorporationsCorporationIDRolesOKCode is the HTTP code returned for type GetCorporationsCorporationIDRolesOK
const GetCorporationsCorporationIDRolesOKCode int = 200

/*GetCorporationsCorporationIDRolesOK List of member character ID's and roles

swagger:response getCorporationsCorporationIdRolesOK
*/
type GetCorporationsCorporationIDRolesOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload models.GetCorporationsCorporationIDRolesOKBody `json:"body,omitempty"`
}

// NewGetCorporationsCorporationIDRolesOK creates GetCorporationsCorporationIDRolesOK with default headers values
func NewGetCorporationsCorporationIDRolesOK() *GetCorporationsCorporationIDRolesOK {
	return &GetCorporationsCorporationIDRolesOK{}
}

// WithCacheControl adds the cacheControl to the get corporations corporation Id roles o k response
func (o *GetCorporationsCorporationIDRolesOK) WithCacheControl(cacheControl string) *GetCorporationsCorporationIDRolesOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get corporations corporation Id roles o k response
func (o *GetCorporationsCorporationIDRolesOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get corporations corporation Id roles o k response
func (o *GetCorporationsCorporationIDRolesOK) WithExpires(expires string) *GetCorporationsCorporationIDRolesOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get corporations corporation Id roles o k response
func (o *GetCorporationsCorporationIDRolesOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get corporations corporation Id roles o k response
func (o *GetCorporationsCorporationIDRolesOK) WithLastModified(lastModified string) *GetCorporationsCorporationIDRolesOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get corporations corporation Id roles o k response
func (o *GetCorporationsCorporationIDRolesOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get corporations corporation Id roles o k response
func (o *GetCorporationsCorporationIDRolesOK) WithPayload(payload models.GetCorporationsCorporationIDRolesOKBody) *GetCorporationsCorporationIDRolesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corporations corporation Id roles o k response
func (o *GetCorporationsCorporationIDRolesOK) SetPayload(payload models.GetCorporationsCorporationIDRolesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorporationsCorporationIDRolesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetCorporationsCorporationIDRolesOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetCorporationsCorporationIDRolesForbiddenCode is the HTTP code returned for type GetCorporationsCorporationIDRolesForbidden
const GetCorporationsCorporationIDRolesForbiddenCode int = 403

/*GetCorporationsCorporationIDRolesForbidden Forbidden

swagger:response getCorporationsCorporationIdRolesForbidden
*/
type GetCorporationsCorporationIDRolesForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCorporationsCorporationIDRolesForbiddenBody `json:"body,omitempty"`
}

// NewGetCorporationsCorporationIDRolesForbidden creates GetCorporationsCorporationIDRolesForbidden with default headers values
func NewGetCorporationsCorporationIDRolesForbidden() *GetCorporationsCorporationIDRolesForbidden {
	return &GetCorporationsCorporationIDRolesForbidden{}
}

// WithPayload adds the payload to the get corporations corporation Id roles forbidden response
func (o *GetCorporationsCorporationIDRolesForbidden) WithPayload(payload *models.GetCorporationsCorporationIDRolesForbiddenBody) *GetCorporationsCorporationIDRolesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corporations corporation Id roles forbidden response
func (o *GetCorporationsCorporationIDRolesForbidden) SetPayload(payload *models.GetCorporationsCorporationIDRolesForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorporationsCorporationIDRolesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCorporationsCorporationIDRolesInternalServerErrorCode is the HTTP code returned for type GetCorporationsCorporationIDRolesInternalServerError
const GetCorporationsCorporationIDRolesInternalServerErrorCode int = 500

/*GetCorporationsCorporationIDRolesInternalServerError Internal server error

swagger:response getCorporationsCorporationIdRolesInternalServerError
*/
type GetCorporationsCorporationIDRolesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCorporationsCorporationIDRolesInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCorporationsCorporationIDRolesInternalServerError creates GetCorporationsCorporationIDRolesInternalServerError with default headers values
func NewGetCorporationsCorporationIDRolesInternalServerError() *GetCorporationsCorporationIDRolesInternalServerError {
	return &GetCorporationsCorporationIDRolesInternalServerError{}
}

// WithPayload adds the payload to the get corporations corporation Id roles internal server error response
func (o *GetCorporationsCorporationIDRolesInternalServerError) WithPayload(payload *models.GetCorporationsCorporationIDRolesInternalServerErrorBody) *GetCorporationsCorporationIDRolesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corporations corporation Id roles internal server error response
func (o *GetCorporationsCorporationIDRolesInternalServerError) SetPayload(payload *models.GetCorporationsCorporationIDRolesInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorporationsCorporationIDRolesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
