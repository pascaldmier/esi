package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetCorporationsCorporationIDAlliancehistoryHandlerFunc turns a function with the right signature into a get corporations corporation id alliancehistory handler
type GetCorporationsCorporationIDAlliancehistoryHandlerFunc func(GetCorporationsCorporationIDAlliancehistoryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCorporationsCorporationIDAlliancehistoryHandlerFunc) Handle(params GetCorporationsCorporationIDAlliancehistoryParams) middleware.Responder {
	return fn(params)
}

// GetCorporationsCorporationIDAlliancehistoryHandler interface for that can handle valid get corporations corporation id alliancehistory params
type GetCorporationsCorporationIDAlliancehistoryHandler interface {
	Handle(GetCorporationsCorporationIDAlliancehistoryParams) middleware.Responder
}

// NewGetCorporationsCorporationIDAlliancehistory creates a new http.Handler for the get corporations corporation id alliancehistory operation
func NewGetCorporationsCorporationIDAlliancehistory(ctx *middleware.Context, handler GetCorporationsCorporationIDAlliancehistoryHandler) *GetCorporationsCorporationIDAlliancehistory {
	return &GetCorporationsCorporationIDAlliancehistory{Context: ctx, Handler: handler}
}

/*GetCorporationsCorporationIDAlliancehistory swagger:route GET /corporations/{corporation_id}/alliancehistory/ Corporation getCorporationsCorporationIdAlliancehistory

Get alliance history

Get a list of all the alliances a corporation has been a member of

---

Alternate route: `/v1/corporations/{corporation_id}/alliancehistory/`

Alternate route: `/legacy/corporations/{corporation_id}/alliancehistory/`

Alternate route: `/dev/corporations/{corporation_id}/alliancehistory/`


---

This route is cached for up to 3600 seconds

*/
type GetCorporationsCorporationIDAlliancehistory struct {
	Context *middleware.Context
	Handler GetCorporationsCorporationIDAlliancehistoryHandler
}

func (o *GetCorporationsCorporationIDAlliancehistory) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetCorporationsCorporationIDAlliancehistoryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
