package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCorporationsCorporationIDStructuresOKCode is the HTTP code returned for type GetCorporationsCorporationIDStructuresOK
const GetCorporationsCorporationIDStructuresOKCode int = 200

/*GetCorporationsCorporationIDStructuresOK List of corporation structures' information

swagger:response getCorporationsCorporationIdStructuresOK
*/
type GetCorporationsCorporationIDStructuresOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*The language used in the response
	  Required: true
	*/
	ContentLanguage string `json:"Content-Language"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload models.GetCorporationsCorporationIDStructuresOKBody `json:"body,omitempty"`
}

// NewGetCorporationsCorporationIDStructuresOK creates GetCorporationsCorporationIDStructuresOK with default headers values
func NewGetCorporationsCorporationIDStructuresOK() *GetCorporationsCorporationIDStructuresOK {
	return &GetCorporationsCorporationIDStructuresOK{}
}

// WithCacheControl adds the cacheControl to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) WithCacheControl(cacheControl string) *GetCorporationsCorporationIDStructuresOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithContentLanguage adds the contentLanguage to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) WithContentLanguage(contentLanguage string) *GetCorporationsCorporationIDStructuresOK {
	o.ContentLanguage = contentLanguage
	return o
}

// SetContentLanguage sets the contentLanguage to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) SetContentLanguage(contentLanguage string) {
	o.ContentLanguage = contentLanguage
}

// WithExpires adds the expires to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) WithExpires(expires string) *GetCorporationsCorporationIDStructuresOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) WithLastModified(lastModified string) *GetCorporationsCorporationIDStructuresOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) WithPayload(payload models.GetCorporationsCorporationIDStructuresOKBody) *GetCorporationsCorporationIDStructuresOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corporations corporation Id structures o k response
func (o *GetCorporationsCorporationIDStructuresOK) SetPayload(payload models.GetCorporationsCorporationIDStructuresOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorporationsCorporationIDStructuresOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Content-Language

	contentLanguage := o.ContentLanguage
	if contentLanguage != "" {
		rw.Header().Set("Content-Language", contentLanguage)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetCorporationsCorporationIDStructuresOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetCorporationsCorporationIDStructuresForbiddenCode is the HTTP code returned for type GetCorporationsCorporationIDStructuresForbidden
const GetCorporationsCorporationIDStructuresForbiddenCode int = 403

/*GetCorporationsCorporationIDStructuresForbidden Forbidden

swagger:response getCorporationsCorporationIdStructuresForbidden
*/
type GetCorporationsCorporationIDStructuresForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCorporationsCorporationIDStructuresForbiddenBody `json:"body,omitempty"`
}

// NewGetCorporationsCorporationIDStructuresForbidden creates GetCorporationsCorporationIDStructuresForbidden with default headers values
func NewGetCorporationsCorporationIDStructuresForbidden() *GetCorporationsCorporationIDStructuresForbidden {
	return &GetCorporationsCorporationIDStructuresForbidden{}
}

// WithPayload adds the payload to the get corporations corporation Id structures forbidden response
func (o *GetCorporationsCorporationIDStructuresForbidden) WithPayload(payload *models.GetCorporationsCorporationIDStructuresForbiddenBody) *GetCorporationsCorporationIDStructuresForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corporations corporation Id structures forbidden response
func (o *GetCorporationsCorporationIDStructuresForbidden) SetPayload(payload *models.GetCorporationsCorporationIDStructuresForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorporationsCorporationIDStructuresForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCorporationsCorporationIDStructuresInternalServerErrorCode is the HTTP code returned for type GetCorporationsCorporationIDStructuresInternalServerError
const GetCorporationsCorporationIDStructuresInternalServerErrorCode int = 500

/*GetCorporationsCorporationIDStructuresInternalServerError Internal server error

swagger:response getCorporationsCorporationIdStructuresInternalServerError
*/
type GetCorporationsCorporationIDStructuresInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCorporationsCorporationIDStructuresInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCorporationsCorporationIDStructuresInternalServerError creates GetCorporationsCorporationIDStructuresInternalServerError with default headers values
func NewGetCorporationsCorporationIDStructuresInternalServerError() *GetCorporationsCorporationIDStructuresInternalServerError {
	return &GetCorporationsCorporationIDStructuresInternalServerError{}
}

// WithPayload adds the payload to the get corporations corporation Id structures internal server error response
func (o *GetCorporationsCorporationIDStructuresInternalServerError) WithPayload(payload *models.GetCorporationsCorporationIDStructuresInternalServerErrorBody) *GetCorporationsCorporationIDStructuresInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corporations corporation Id structures internal server error response
func (o *GetCorporationsCorporationIDStructuresInternalServerError) SetPayload(payload *models.GetCorporationsCorporationIDStructuresInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorporationsCorporationIDStructuresInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
