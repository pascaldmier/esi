package corporation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCorporationsCorporationIDOKCode is the HTTP code returned for type GetCorporationsCorporationIDOK
const GetCorporationsCorporationIDOKCode int = 200

/*GetCorporationsCorporationIDOK Public data about a corporation

swagger:response getCorporationsCorporationIdOK
*/
type GetCorporationsCorporationIDOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetCorporationsCorporationIDOKBody `json:"body,omitempty"`
}

// NewGetCorporationsCorporationIDOK creates GetCorporationsCorporationIDOK with default headers values
func NewGetCorporationsCorporationIDOK() *GetCorporationsCorporationIDOK {
	return &GetCorporationsCorporationIDOK{}
}

// WithCacheControl adds the cacheControl to the get corporations corporation Id o k response
func (o *GetCorporationsCorporationIDOK) WithCacheControl(cacheControl string) *GetCorporationsCorporationIDOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get corporations corporation Id o k response
func (o *GetCorporationsCorporationIDOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get corporations corporation Id o k response
func (o *GetCorporationsCorporationIDOK) WithExpires(expires string) *GetCorporationsCorporationIDOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get corporations corporation Id o k response
func (o *GetCorporationsCorporationIDOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get corporations corporation Id o k response
func (o *GetCorporationsCorporationIDOK) WithLastModified(lastModified string) *GetCorporationsCorporationIDOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get corporations corporation Id o k response
func (o *GetCorporationsCorporationIDOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get corporations corporation Id o k response
func (o *GetCorporationsCorporationIDOK) WithPayload(payload *models.GetCorporationsCorporationIDOKBody) *GetCorporationsCorporationIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corporations corporation Id o k response
func (o *GetCorporationsCorporationIDOK) SetPayload(payload *models.GetCorporationsCorporationIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorporationsCorporationIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCorporationsCorporationIDNotFoundCode is the HTTP code returned for type GetCorporationsCorporationIDNotFound
const GetCorporationsCorporationIDNotFoundCode int = 404

/*GetCorporationsCorporationIDNotFound Corporation not found

swagger:response getCorporationsCorporationIdNotFound
*/
type GetCorporationsCorporationIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GetCorporationsCorporationIDNotFoundBody `json:"body,omitempty"`
}

// NewGetCorporationsCorporationIDNotFound creates GetCorporationsCorporationIDNotFound with default headers values
func NewGetCorporationsCorporationIDNotFound() *GetCorporationsCorporationIDNotFound {
	return &GetCorporationsCorporationIDNotFound{}
}

// WithPayload adds the payload to the get corporations corporation Id not found response
func (o *GetCorporationsCorporationIDNotFound) WithPayload(payload *models.GetCorporationsCorporationIDNotFoundBody) *GetCorporationsCorporationIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corporations corporation Id not found response
func (o *GetCorporationsCorporationIDNotFound) SetPayload(payload *models.GetCorporationsCorporationIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorporationsCorporationIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCorporationsCorporationIDInternalServerErrorCode is the HTTP code returned for type GetCorporationsCorporationIDInternalServerError
const GetCorporationsCorporationIDInternalServerErrorCode int = 500

/*GetCorporationsCorporationIDInternalServerError Internal server error

swagger:response getCorporationsCorporationIdInternalServerError
*/
type GetCorporationsCorporationIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCorporationsCorporationIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCorporationsCorporationIDInternalServerError creates GetCorporationsCorporationIDInternalServerError with default headers values
func NewGetCorporationsCorporationIDInternalServerError() *GetCorporationsCorporationIDInternalServerError {
	return &GetCorporationsCorporationIDInternalServerError{}
}

// WithPayload adds the payload to the get corporations corporation Id internal server error response
func (o *GetCorporationsCorporationIDInternalServerError) WithPayload(payload *models.GetCorporationsCorporationIDInternalServerErrorBody) *GetCorporationsCorporationIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get corporations corporation Id internal server error response
func (o *GetCorporationsCorporationIDInternalServerError) SetPayload(payload *models.GetCorporationsCorporationIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCorporationsCorporationIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
