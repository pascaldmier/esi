package killmails

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetCharactersCharacterIDKillmailsRecentHandlerFunc turns a function with the right signature into a get characters character id killmails recent handler
type GetCharactersCharacterIDKillmailsRecentHandlerFunc func(GetCharactersCharacterIDKillmailsRecentParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCharactersCharacterIDKillmailsRecentHandlerFunc) Handle(params GetCharactersCharacterIDKillmailsRecentParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// GetCharactersCharacterIDKillmailsRecentHandler interface for that can handle valid get characters character id killmails recent params
type GetCharactersCharacterIDKillmailsRecentHandler interface {
	Handle(GetCharactersCharacterIDKillmailsRecentParams, interface{}) middleware.Responder
}

// NewGetCharactersCharacterIDKillmailsRecent creates a new http.Handler for the get characters character id killmails recent operation
func NewGetCharactersCharacterIDKillmailsRecent(ctx *middleware.Context, handler GetCharactersCharacterIDKillmailsRecentHandler) *GetCharactersCharacterIDKillmailsRecent {
	return &GetCharactersCharacterIDKillmailsRecent{Context: ctx, Handler: handler}
}

/*GetCharactersCharacterIDKillmailsRecent swagger:route GET /characters/{character_id}/killmails/recent/ Killmails getCharactersCharacterIdKillmailsRecent

List kills and losses

Return a list of character's recent kills and losses

---

Alternate route: `/v1/characters/{character_id}/killmails/recent/`

Alternate route: `/legacy/characters/{character_id}/killmails/recent/`

Alternate route: `/dev/characters/{character_id}/killmails/recent/`


---

This route is cached for up to 120 seconds

*/
type GetCharactersCharacterIDKillmailsRecent struct {
	Context *middleware.Context
	Handler GetCharactersCharacterIDKillmailsRecentHandler
}

func (o *GetCharactersCharacterIDKillmailsRecent) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetCharactersCharacterIDKillmailsRecentParams()

	uprinc, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
