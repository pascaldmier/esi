package killmails

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDKillmailsRecentOKCode is the HTTP code returned for type GetCharactersCharacterIDKillmailsRecentOK
const GetCharactersCharacterIDKillmailsRecentOKCode int = 200

/*GetCharactersCharacterIDKillmailsRecentOK A list of killmail IDs and hashes

swagger:response getCharactersCharacterIdKillmailsRecentOK
*/
type GetCharactersCharacterIDKillmailsRecentOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload models.GetCharactersCharacterIDKillmailsRecentOKBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDKillmailsRecentOK creates GetCharactersCharacterIDKillmailsRecentOK with default headers values
func NewGetCharactersCharacterIDKillmailsRecentOK() *GetCharactersCharacterIDKillmailsRecentOK {
	return &GetCharactersCharacterIDKillmailsRecentOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id killmails recent o k response
func (o *GetCharactersCharacterIDKillmailsRecentOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDKillmailsRecentOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id killmails recent o k response
func (o *GetCharactersCharacterIDKillmailsRecentOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id killmails recent o k response
func (o *GetCharactersCharacterIDKillmailsRecentOK) WithExpires(expires string) *GetCharactersCharacterIDKillmailsRecentOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id killmails recent o k response
func (o *GetCharactersCharacterIDKillmailsRecentOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id killmails recent o k response
func (o *GetCharactersCharacterIDKillmailsRecentOK) WithLastModified(lastModified string) *GetCharactersCharacterIDKillmailsRecentOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id killmails recent o k response
func (o *GetCharactersCharacterIDKillmailsRecentOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id killmails recent o k response
func (o *GetCharactersCharacterIDKillmailsRecentOK) WithPayload(payload models.GetCharactersCharacterIDKillmailsRecentOKBody) *GetCharactersCharacterIDKillmailsRecentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id killmails recent o k response
func (o *GetCharactersCharacterIDKillmailsRecentOK) SetPayload(payload models.GetCharactersCharacterIDKillmailsRecentOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDKillmailsRecentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetCharactersCharacterIDKillmailsRecentOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetCharactersCharacterIDKillmailsRecentForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDKillmailsRecentForbidden
const GetCharactersCharacterIDKillmailsRecentForbiddenCode int = 403

/*GetCharactersCharacterIDKillmailsRecentForbidden Forbidden

swagger:response getCharactersCharacterIdKillmailsRecentForbidden
*/
type GetCharactersCharacterIDKillmailsRecentForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDKillmailsRecentForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDKillmailsRecentForbidden creates GetCharactersCharacterIDKillmailsRecentForbidden with default headers values
func NewGetCharactersCharacterIDKillmailsRecentForbidden() *GetCharactersCharacterIDKillmailsRecentForbidden {
	return &GetCharactersCharacterIDKillmailsRecentForbidden{}
}

// WithPayload adds the payload to the get characters character Id killmails recent forbidden response
func (o *GetCharactersCharacterIDKillmailsRecentForbidden) WithPayload(payload *models.GetCharactersCharacterIDKillmailsRecentForbiddenBody) *GetCharactersCharacterIDKillmailsRecentForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id killmails recent forbidden response
func (o *GetCharactersCharacterIDKillmailsRecentForbidden) SetPayload(payload *models.GetCharactersCharacterIDKillmailsRecentForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDKillmailsRecentForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDKillmailsRecentInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDKillmailsRecentInternalServerError
const GetCharactersCharacterIDKillmailsRecentInternalServerErrorCode int = 500

/*GetCharactersCharacterIDKillmailsRecentInternalServerError Internal server error

swagger:response getCharactersCharacterIdKillmailsRecentInternalServerError
*/
type GetCharactersCharacterIDKillmailsRecentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDKillmailsRecentInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDKillmailsRecentInternalServerError creates GetCharactersCharacterIDKillmailsRecentInternalServerError with default headers values
func NewGetCharactersCharacterIDKillmailsRecentInternalServerError() *GetCharactersCharacterIDKillmailsRecentInternalServerError {
	return &GetCharactersCharacterIDKillmailsRecentInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id killmails recent internal server error response
func (o *GetCharactersCharacterIDKillmailsRecentInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDKillmailsRecentInternalServerErrorBody) *GetCharactersCharacterIDKillmailsRecentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id killmails recent internal server error response
func (o *GetCharactersCharacterIDKillmailsRecentInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDKillmailsRecentInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDKillmailsRecentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
