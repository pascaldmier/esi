package killmails

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetKillmailsKillmailIDKillmailHashOKCode is the HTTP code returned for type GetKillmailsKillmailIDKillmailHashOK
const GetKillmailsKillmailIDKillmailHashOKCode int = 200

/*GetKillmailsKillmailIDKillmailHashOK A killmail

swagger:response getKillmailsKillmailIdKillmailHashOK
*/
type GetKillmailsKillmailIDKillmailHashOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetKillmailsKillmailIDKillmailHashOKBody `json:"body,omitempty"`
}

// NewGetKillmailsKillmailIDKillmailHashOK creates GetKillmailsKillmailIDKillmailHashOK with default headers values
func NewGetKillmailsKillmailIDKillmailHashOK() *GetKillmailsKillmailIDKillmailHashOK {
	return &GetKillmailsKillmailIDKillmailHashOK{}
}

// WithCacheControl adds the cacheControl to the get killmails killmail Id killmail hash o k response
func (o *GetKillmailsKillmailIDKillmailHashOK) WithCacheControl(cacheControl string) *GetKillmailsKillmailIDKillmailHashOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get killmails killmail Id killmail hash o k response
func (o *GetKillmailsKillmailIDKillmailHashOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get killmails killmail Id killmail hash o k response
func (o *GetKillmailsKillmailIDKillmailHashOK) WithExpires(expires string) *GetKillmailsKillmailIDKillmailHashOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get killmails killmail Id killmail hash o k response
func (o *GetKillmailsKillmailIDKillmailHashOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get killmails killmail Id killmail hash o k response
func (o *GetKillmailsKillmailIDKillmailHashOK) WithLastModified(lastModified string) *GetKillmailsKillmailIDKillmailHashOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get killmails killmail Id killmail hash o k response
func (o *GetKillmailsKillmailIDKillmailHashOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get killmails killmail Id killmail hash o k response
func (o *GetKillmailsKillmailIDKillmailHashOK) WithPayload(payload *models.GetKillmailsKillmailIDKillmailHashOKBody) *GetKillmailsKillmailIDKillmailHashOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get killmails killmail Id killmail hash o k response
func (o *GetKillmailsKillmailIDKillmailHashOK) SetPayload(payload *models.GetKillmailsKillmailIDKillmailHashOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKillmailsKillmailIDKillmailHashOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetKillmailsKillmailIDKillmailHashUnprocessableEntityCode is the HTTP code returned for type GetKillmailsKillmailIDKillmailHashUnprocessableEntity
const GetKillmailsKillmailIDKillmailHashUnprocessableEntityCode int = 422

/*GetKillmailsKillmailIDKillmailHashUnprocessableEntity Invalid killmail_id and/or killmail_hash

swagger:response getKillmailsKillmailIdKillmailHashUnprocessableEntity
*/
type GetKillmailsKillmailIDKillmailHashUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.GetKillmailsKillmailIDKillmailHashUnprocessableEntityBody `json:"body,omitempty"`
}

// NewGetKillmailsKillmailIDKillmailHashUnprocessableEntity creates GetKillmailsKillmailIDKillmailHashUnprocessableEntity with default headers values
func NewGetKillmailsKillmailIDKillmailHashUnprocessableEntity() *GetKillmailsKillmailIDKillmailHashUnprocessableEntity {
	return &GetKillmailsKillmailIDKillmailHashUnprocessableEntity{}
}

// WithPayload adds the payload to the get killmails killmail Id killmail hash unprocessable entity response
func (o *GetKillmailsKillmailIDKillmailHashUnprocessableEntity) WithPayload(payload *models.GetKillmailsKillmailIDKillmailHashUnprocessableEntityBody) *GetKillmailsKillmailIDKillmailHashUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get killmails killmail Id killmail hash unprocessable entity response
func (o *GetKillmailsKillmailIDKillmailHashUnprocessableEntity) SetPayload(payload *models.GetKillmailsKillmailIDKillmailHashUnprocessableEntityBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKillmailsKillmailIDKillmailHashUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetKillmailsKillmailIDKillmailHashInternalServerErrorCode is the HTTP code returned for type GetKillmailsKillmailIDKillmailHashInternalServerError
const GetKillmailsKillmailIDKillmailHashInternalServerErrorCode int = 500

/*GetKillmailsKillmailIDKillmailHashInternalServerError Internal server error

swagger:response getKillmailsKillmailIdKillmailHashInternalServerError
*/
type GetKillmailsKillmailIDKillmailHashInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetKillmailsKillmailIDKillmailHashInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetKillmailsKillmailIDKillmailHashInternalServerError creates GetKillmailsKillmailIDKillmailHashInternalServerError with default headers values
func NewGetKillmailsKillmailIDKillmailHashInternalServerError() *GetKillmailsKillmailIDKillmailHashInternalServerError {
	return &GetKillmailsKillmailIDKillmailHashInternalServerError{}
}

// WithPayload adds the payload to the get killmails killmail Id killmail hash internal server error response
func (o *GetKillmailsKillmailIDKillmailHashInternalServerError) WithPayload(payload *models.GetKillmailsKillmailIDKillmailHashInternalServerErrorBody) *GetKillmailsKillmailIDKillmailHashInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get killmails killmail Id killmail hash internal server error response
func (o *GetKillmailsKillmailIDKillmailHashInternalServerError) SetPayload(payload *models.GetKillmailsKillmailIDKillmailHashInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKillmailsKillmailIDKillmailHashInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
