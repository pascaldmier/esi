package killmails

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetKillmailsKillmailIDKillmailHashHandlerFunc turns a function with the right signature into a get killmails killmail id killmail hash handler
type GetKillmailsKillmailIDKillmailHashHandlerFunc func(GetKillmailsKillmailIDKillmailHashParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetKillmailsKillmailIDKillmailHashHandlerFunc) Handle(params GetKillmailsKillmailIDKillmailHashParams) middleware.Responder {
	return fn(params)
}

// GetKillmailsKillmailIDKillmailHashHandler interface for that can handle valid get killmails killmail id killmail hash params
type GetKillmailsKillmailIDKillmailHashHandler interface {
	Handle(GetKillmailsKillmailIDKillmailHashParams) middleware.Responder
}

// NewGetKillmailsKillmailIDKillmailHash creates a new http.Handler for the get killmails killmail id killmail hash operation
func NewGetKillmailsKillmailIDKillmailHash(ctx *middleware.Context, handler GetKillmailsKillmailIDKillmailHashHandler) *GetKillmailsKillmailIDKillmailHash {
	return &GetKillmailsKillmailIDKillmailHash{Context: ctx, Handler: handler}
}

/*GetKillmailsKillmailIDKillmailHash swagger:route GET /killmails/{killmail_id}/{killmail_hash}/ Killmails getKillmailsKillmailIdKillmailHash

Get a single killmail

Return a single killmail from its ID and hash

---

Alternate route: `/v1/killmails/{killmail_id}/{killmail_hash}/`

Alternate route: `/legacy/killmails/{killmail_id}/{killmail_hash}/`

Alternate route: `/dev/killmails/{killmail_id}/{killmail_hash}/`


---

This route is cached for up to 3600 seconds

*/
type GetKillmailsKillmailIDKillmailHash struct {
	Context *middleware.Context
	Handler GetKillmailsKillmailIDKillmailHashHandler
}

func (o *GetKillmailsKillmailIDKillmailHash) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetKillmailsKillmailIDKillmailHashParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
