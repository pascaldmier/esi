package planetary_interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetUniverseSchematicsSchematicIDOKCode is the HTTP code returned for type GetUniverseSchematicsSchematicIDOK
const GetUniverseSchematicsSchematicIDOKCode int = 200

/*GetUniverseSchematicsSchematicIDOK Public data about a schematic

swagger:response getUniverseSchematicsSchematicIdOK
*/
type GetUniverseSchematicsSchematicIDOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetUniverseSchematicsSchematicIDOKBody `json:"body,omitempty"`
}

// NewGetUniverseSchematicsSchematicIDOK creates GetUniverseSchematicsSchematicIDOK with default headers values
func NewGetUniverseSchematicsSchematicIDOK() *GetUniverseSchematicsSchematicIDOK {
	return &GetUniverseSchematicsSchematicIDOK{}
}

// WithCacheControl adds the cacheControl to the get universe schematics schematic Id o k response
func (o *GetUniverseSchematicsSchematicIDOK) WithCacheControl(cacheControl string) *GetUniverseSchematicsSchematicIDOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get universe schematics schematic Id o k response
func (o *GetUniverseSchematicsSchematicIDOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get universe schematics schematic Id o k response
func (o *GetUniverseSchematicsSchematicIDOK) WithExpires(expires string) *GetUniverseSchematicsSchematicIDOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get universe schematics schematic Id o k response
func (o *GetUniverseSchematicsSchematicIDOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get universe schematics schematic Id o k response
func (o *GetUniverseSchematicsSchematicIDOK) WithLastModified(lastModified string) *GetUniverseSchematicsSchematicIDOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get universe schematics schematic Id o k response
func (o *GetUniverseSchematicsSchematicIDOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get universe schematics schematic Id o k response
func (o *GetUniverseSchematicsSchematicIDOK) WithPayload(payload *models.GetUniverseSchematicsSchematicIDOKBody) *GetUniverseSchematicsSchematicIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe schematics schematic Id o k response
func (o *GetUniverseSchematicsSchematicIDOK) SetPayload(payload *models.GetUniverseSchematicsSchematicIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniverseSchematicsSchematicIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUniverseSchematicsSchematicIDNotFoundCode is the HTTP code returned for type GetUniverseSchematicsSchematicIDNotFound
const GetUniverseSchematicsSchematicIDNotFoundCode int = 404

/*GetUniverseSchematicsSchematicIDNotFound Schematic not found

swagger:response getUniverseSchematicsSchematicIdNotFound
*/
type GetUniverseSchematicsSchematicIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GetUniverseSchematicsSchematicIDNotFoundBody `json:"body,omitempty"`
}

// NewGetUniverseSchematicsSchematicIDNotFound creates GetUniverseSchematicsSchematicIDNotFound with default headers values
func NewGetUniverseSchematicsSchematicIDNotFound() *GetUniverseSchematicsSchematicIDNotFound {
	return &GetUniverseSchematicsSchematicIDNotFound{}
}

// WithPayload adds the payload to the get universe schematics schematic Id not found response
func (o *GetUniverseSchematicsSchematicIDNotFound) WithPayload(payload *models.GetUniverseSchematicsSchematicIDNotFoundBody) *GetUniverseSchematicsSchematicIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe schematics schematic Id not found response
func (o *GetUniverseSchematicsSchematicIDNotFound) SetPayload(payload *models.GetUniverseSchematicsSchematicIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniverseSchematicsSchematicIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUniverseSchematicsSchematicIDInternalServerErrorCode is the HTTP code returned for type GetUniverseSchematicsSchematicIDInternalServerError
const GetUniverseSchematicsSchematicIDInternalServerErrorCode int = 500

/*GetUniverseSchematicsSchematicIDInternalServerError Internal server error

swagger:response getUniverseSchematicsSchematicIdInternalServerError
*/
type GetUniverseSchematicsSchematicIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetUniverseSchematicsSchematicIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetUniverseSchematicsSchematicIDInternalServerError creates GetUniverseSchematicsSchematicIDInternalServerError with default headers values
func NewGetUniverseSchematicsSchematicIDInternalServerError() *GetUniverseSchematicsSchematicIDInternalServerError {
	return &GetUniverseSchematicsSchematicIDInternalServerError{}
}

// WithPayload adds the payload to the get universe schematics schematic Id internal server error response
func (o *GetUniverseSchematicsSchematicIDInternalServerError) WithPayload(payload *models.GetUniverseSchematicsSchematicIDInternalServerErrorBody) *GetUniverseSchematicsSchematicIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universe schematics schematic Id internal server error response
func (o *GetUniverseSchematicsSchematicIDInternalServerError) SetPayload(payload *models.GetUniverseSchematicsSchematicIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniverseSchematicsSchematicIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
