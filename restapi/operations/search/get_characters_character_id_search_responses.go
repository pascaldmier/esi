package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDSearchOKCode is the HTTP code returned for type GetCharactersCharacterIDSearchOK
const GetCharactersCharacterIDSearchOKCode int = 200

/*GetCharactersCharacterIDSearchOK A list of search results

swagger:response getCharactersCharacterIdSearchOK
*/
type GetCharactersCharacterIDSearchOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDSearchOKBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDSearchOK creates GetCharactersCharacterIDSearchOK with default headers values
func NewGetCharactersCharacterIDSearchOK() *GetCharactersCharacterIDSearchOK {
	return &GetCharactersCharacterIDSearchOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id search o k response
func (o *GetCharactersCharacterIDSearchOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDSearchOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id search o k response
func (o *GetCharactersCharacterIDSearchOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id search o k response
func (o *GetCharactersCharacterIDSearchOK) WithExpires(expires string) *GetCharactersCharacterIDSearchOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id search o k response
func (o *GetCharactersCharacterIDSearchOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id search o k response
func (o *GetCharactersCharacterIDSearchOK) WithLastModified(lastModified string) *GetCharactersCharacterIDSearchOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id search o k response
func (o *GetCharactersCharacterIDSearchOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id search o k response
func (o *GetCharactersCharacterIDSearchOK) WithPayload(payload *models.GetCharactersCharacterIDSearchOKBody) *GetCharactersCharacterIDSearchOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id search o k response
func (o *GetCharactersCharacterIDSearchOK) SetPayload(payload *models.GetCharactersCharacterIDSearchOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDSearchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDSearchForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDSearchForbidden
const GetCharactersCharacterIDSearchForbiddenCode int = 403

/*GetCharactersCharacterIDSearchForbidden Forbidden

swagger:response getCharactersCharacterIdSearchForbidden
*/
type GetCharactersCharacterIDSearchForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDSearchForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDSearchForbidden creates GetCharactersCharacterIDSearchForbidden with default headers values
func NewGetCharactersCharacterIDSearchForbidden() *GetCharactersCharacterIDSearchForbidden {
	return &GetCharactersCharacterIDSearchForbidden{}
}

// WithPayload adds the payload to the get characters character Id search forbidden response
func (o *GetCharactersCharacterIDSearchForbidden) WithPayload(payload *models.GetCharactersCharacterIDSearchForbiddenBody) *GetCharactersCharacterIDSearchForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id search forbidden response
func (o *GetCharactersCharacterIDSearchForbidden) SetPayload(payload *models.GetCharactersCharacterIDSearchForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDSearchForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDSearchInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDSearchInternalServerError
const GetCharactersCharacterIDSearchInternalServerErrorCode int = 500

/*GetCharactersCharacterIDSearchInternalServerError Internal server error

swagger:response getCharactersCharacterIdSearchInternalServerError
*/
type GetCharactersCharacterIDSearchInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDSearchInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDSearchInternalServerError creates GetCharactersCharacterIDSearchInternalServerError with default headers values
func NewGetCharactersCharacterIDSearchInternalServerError() *GetCharactersCharacterIDSearchInternalServerError {
	return &GetCharactersCharacterIDSearchInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id search internal server error response
func (o *GetCharactersCharacterIDSearchInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDSearchInternalServerErrorBody) *GetCharactersCharacterIDSearchInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id search internal server error response
func (o *GetCharactersCharacterIDSearchInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDSearchInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDSearchInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
