package fleets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// DeleteFleetsFleetIDMembersMemberIDNoContentCode is the HTTP code returned for type DeleteFleetsFleetIDMembersMemberIDNoContent
const DeleteFleetsFleetIDMembersMemberIDNoContentCode int = 204

/*DeleteFleetsFleetIDMembersMemberIDNoContent Fleet member kicked

swagger:response deleteFleetsFleetIdMembersMemberIdNoContent
*/
type DeleteFleetsFleetIDMembersMemberIDNoContent struct {
}

// NewDeleteFleetsFleetIDMembersMemberIDNoContent creates DeleteFleetsFleetIDMembersMemberIDNoContent with default headers values
func NewDeleteFleetsFleetIDMembersMemberIDNoContent() *DeleteFleetsFleetIDMembersMemberIDNoContent {
	return &DeleteFleetsFleetIDMembersMemberIDNoContent{}
}

// WriteResponse to the client
func (o *DeleteFleetsFleetIDMembersMemberIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

// DeleteFleetsFleetIDMembersMemberIDForbiddenCode is the HTTP code returned for type DeleteFleetsFleetIDMembersMemberIDForbidden
const DeleteFleetsFleetIDMembersMemberIDForbiddenCode int = 403

/*DeleteFleetsFleetIDMembersMemberIDForbidden Forbidden

swagger:response deleteFleetsFleetIdMembersMemberIdForbidden
*/
type DeleteFleetsFleetIDMembersMemberIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.DeleteFleetsFleetIDMembersMemberIDForbiddenBody `json:"body,omitempty"`
}

// NewDeleteFleetsFleetIDMembersMemberIDForbidden creates DeleteFleetsFleetIDMembersMemberIDForbidden with default headers values
func NewDeleteFleetsFleetIDMembersMemberIDForbidden() *DeleteFleetsFleetIDMembersMemberIDForbidden {
	return &DeleteFleetsFleetIDMembersMemberIDForbidden{}
}

// WithPayload adds the payload to the delete fleets fleet Id members member Id forbidden response
func (o *DeleteFleetsFleetIDMembersMemberIDForbidden) WithPayload(payload *models.DeleteFleetsFleetIDMembersMemberIDForbiddenBody) *DeleteFleetsFleetIDMembersMemberIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete fleets fleet Id members member Id forbidden response
func (o *DeleteFleetsFleetIDMembersMemberIDForbidden) SetPayload(payload *models.DeleteFleetsFleetIDMembersMemberIDForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFleetsFleetIDMembersMemberIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteFleetsFleetIDMembersMemberIDNotFoundCode is the HTTP code returned for type DeleteFleetsFleetIDMembersMemberIDNotFound
const DeleteFleetsFleetIDMembersMemberIDNotFoundCode int = 404

/*DeleteFleetsFleetIDMembersMemberIDNotFound The fleet does not exist or you don't have access to it

swagger:response deleteFleetsFleetIdMembersMemberIdNotFound
*/
type DeleteFleetsFleetIDMembersMemberIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.DeleteFleetsFleetIDMembersMemberIDNotFoundBody `json:"body,omitempty"`
}

// NewDeleteFleetsFleetIDMembersMemberIDNotFound creates DeleteFleetsFleetIDMembersMemberIDNotFound with default headers values
func NewDeleteFleetsFleetIDMembersMemberIDNotFound() *DeleteFleetsFleetIDMembersMemberIDNotFound {
	return &DeleteFleetsFleetIDMembersMemberIDNotFound{}
}

// WithPayload adds the payload to the delete fleets fleet Id members member Id not found response
func (o *DeleteFleetsFleetIDMembersMemberIDNotFound) WithPayload(payload *models.DeleteFleetsFleetIDMembersMemberIDNotFoundBody) *DeleteFleetsFleetIDMembersMemberIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete fleets fleet Id members member Id not found response
func (o *DeleteFleetsFleetIDMembersMemberIDNotFound) SetPayload(payload *models.DeleteFleetsFleetIDMembersMemberIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFleetsFleetIDMembersMemberIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteFleetsFleetIDMembersMemberIDInternalServerErrorCode is the HTTP code returned for type DeleteFleetsFleetIDMembersMemberIDInternalServerError
const DeleteFleetsFleetIDMembersMemberIDInternalServerErrorCode int = 500

/*DeleteFleetsFleetIDMembersMemberIDInternalServerError Internal server error

swagger:response deleteFleetsFleetIdMembersMemberIdInternalServerError
*/
type DeleteFleetsFleetIDMembersMemberIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.DeleteFleetsFleetIDMembersMemberIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewDeleteFleetsFleetIDMembersMemberIDInternalServerError creates DeleteFleetsFleetIDMembersMemberIDInternalServerError with default headers values
func NewDeleteFleetsFleetIDMembersMemberIDInternalServerError() *DeleteFleetsFleetIDMembersMemberIDInternalServerError {
	return &DeleteFleetsFleetIDMembersMemberIDInternalServerError{}
}

// WithPayload adds the payload to the delete fleets fleet Id members member Id internal server error response
func (o *DeleteFleetsFleetIDMembersMemberIDInternalServerError) WithPayload(payload *models.DeleteFleetsFleetIDMembersMemberIDInternalServerErrorBody) *DeleteFleetsFleetIDMembersMemberIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete fleets fleet Id members member Id internal server error response
func (o *DeleteFleetsFleetIDMembersMemberIDInternalServerError) SetPayload(payload *models.DeleteFleetsFleetIDMembersMemberIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFleetsFleetIDMembersMemberIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
