package fleets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// PutFleetsFleetIDNoContentCode is the HTTP code returned for type PutFleetsFleetIDNoContent
const PutFleetsFleetIDNoContentCode int = 204

/*PutFleetsFleetIDNoContent Fleet updated

swagger:response putFleetsFleetIdNoContent
*/
type PutFleetsFleetIDNoContent struct {
}

// NewPutFleetsFleetIDNoContent creates PutFleetsFleetIDNoContent with default headers values
func NewPutFleetsFleetIDNoContent() *PutFleetsFleetIDNoContent {
	return &PutFleetsFleetIDNoContent{}
}

// WriteResponse to the client
func (o *PutFleetsFleetIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

// PutFleetsFleetIDBadRequestCode is the HTTP code returned for type PutFleetsFleetIDBadRequest
const PutFleetsFleetIDBadRequestCode int = 400

/*PutFleetsFleetIDBadRequest Invalid request body

swagger:response putFleetsFleetIdBadRequest
*/
type PutFleetsFleetIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.PutFleetsFleetIDBadRequestBody `json:"body,omitempty"`
}

// NewPutFleetsFleetIDBadRequest creates PutFleetsFleetIDBadRequest with default headers values
func NewPutFleetsFleetIDBadRequest() *PutFleetsFleetIDBadRequest {
	return &PutFleetsFleetIDBadRequest{}
}

// WithPayload adds the payload to the put fleets fleet Id bad request response
func (o *PutFleetsFleetIDBadRequest) WithPayload(payload *models.PutFleetsFleetIDBadRequestBody) *PutFleetsFleetIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put fleets fleet Id bad request response
func (o *PutFleetsFleetIDBadRequest) SetPayload(payload *models.PutFleetsFleetIDBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutFleetsFleetIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutFleetsFleetIDForbiddenCode is the HTTP code returned for type PutFleetsFleetIDForbidden
const PutFleetsFleetIDForbiddenCode int = 403

/*PutFleetsFleetIDForbidden Forbidden

swagger:response putFleetsFleetIdForbidden
*/
type PutFleetsFleetIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.PutFleetsFleetIDForbiddenBody `json:"body,omitempty"`
}

// NewPutFleetsFleetIDForbidden creates PutFleetsFleetIDForbidden with default headers values
func NewPutFleetsFleetIDForbidden() *PutFleetsFleetIDForbidden {
	return &PutFleetsFleetIDForbidden{}
}

// WithPayload adds the payload to the put fleets fleet Id forbidden response
func (o *PutFleetsFleetIDForbidden) WithPayload(payload *models.PutFleetsFleetIDForbiddenBody) *PutFleetsFleetIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put fleets fleet Id forbidden response
func (o *PutFleetsFleetIDForbidden) SetPayload(payload *models.PutFleetsFleetIDForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutFleetsFleetIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutFleetsFleetIDNotFoundCode is the HTTP code returned for type PutFleetsFleetIDNotFound
const PutFleetsFleetIDNotFoundCode int = 404

/*PutFleetsFleetIDNotFound The fleet does not exist or you don't have access to it

swagger:response putFleetsFleetIdNotFound
*/
type PutFleetsFleetIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.PutFleetsFleetIDNotFoundBody `json:"body,omitempty"`
}

// NewPutFleetsFleetIDNotFound creates PutFleetsFleetIDNotFound with default headers values
func NewPutFleetsFleetIDNotFound() *PutFleetsFleetIDNotFound {
	return &PutFleetsFleetIDNotFound{}
}

// WithPayload adds the payload to the put fleets fleet Id not found response
func (o *PutFleetsFleetIDNotFound) WithPayload(payload *models.PutFleetsFleetIDNotFoundBody) *PutFleetsFleetIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put fleets fleet Id not found response
func (o *PutFleetsFleetIDNotFound) SetPayload(payload *models.PutFleetsFleetIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutFleetsFleetIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutFleetsFleetIDInternalServerErrorCode is the HTTP code returned for type PutFleetsFleetIDInternalServerError
const PutFleetsFleetIDInternalServerErrorCode int = 500

/*PutFleetsFleetIDInternalServerError Internal server error

swagger:response putFleetsFleetIdInternalServerError
*/
type PutFleetsFleetIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.PutFleetsFleetIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewPutFleetsFleetIDInternalServerError creates PutFleetsFleetIDInternalServerError with default headers values
func NewPutFleetsFleetIDInternalServerError() *PutFleetsFleetIDInternalServerError {
	return &PutFleetsFleetIDInternalServerError{}
}

// WithPayload adds the payload to the put fleets fleet Id internal server error response
func (o *PutFleetsFleetIDInternalServerError) WithPayload(payload *models.PutFleetsFleetIDInternalServerErrorBody) *PutFleetsFleetIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put fleets fleet Id internal server error response
func (o *PutFleetsFleetIDInternalServerError) SetPayload(payload *models.PutFleetsFleetIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutFleetsFleetIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
