package fleets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteFleetsFleetIDWingsWingIDHandlerFunc turns a function with the right signature into a delete fleets fleet id wings wing id handler
type DeleteFleetsFleetIDWingsWingIDHandlerFunc func(DeleteFleetsFleetIDWingsWingIDParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteFleetsFleetIDWingsWingIDHandlerFunc) Handle(params DeleteFleetsFleetIDWingsWingIDParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// DeleteFleetsFleetIDWingsWingIDHandler interface for that can handle valid delete fleets fleet id wings wing id params
type DeleteFleetsFleetIDWingsWingIDHandler interface {
	Handle(DeleteFleetsFleetIDWingsWingIDParams, interface{}) middleware.Responder
}

// NewDeleteFleetsFleetIDWingsWingID creates a new http.Handler for the delete fleets fleet id wings wing id operation
func NewDeleteFleetsFleetIDWingsWingID(ctx *middleware.Context, handler DeleteFleetsFleetIDWingsWingIDHandler) *DeleteFleetsFleetIDWingsWingID {
	return &DeleteFleetsFleetIDWingsWingID{Context: ctx, Handler: handler}
}

/*DeleteFleetsFleetIDWingsWingID swagger:route DELETE /fleets/{fleet_id}/wings/{wing_id}/ Fleets deleteFleetsFleetIdWingsWingId

Delete fleet wing

Delete a fleet wing, only empty wings can be deleted. The wing may contain squads, but the squads must be empty

---

Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`

Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`

Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`


*/
type DeleteFleetsFleetIDWingsWingID struct {
	Context *middleware.Context
	Handler DeleteFleetsFleetIDWingsWingIDHandler
}

func (o *DeleteFleetsFleetIDWingsWingID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewDeleteFleetsFleetIDWingsWingIDParams()

	uprinc, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
