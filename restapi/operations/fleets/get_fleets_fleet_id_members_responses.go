package fleets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetFleetsFleetIDMembersOKCode is the HTTP code returned for type GetFleetsFleetIDMembersOK
const GetFleetsFleetIDMembersOKCode int = 200

/*GetFleetsFleetIDMembersOK A list of fleet members

swagger:response getFleetsFleetIdMembersOK
*/
type GetFleetsFleetIDMembersOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*The language used in the response
	  Required: true
	*/
	ContentLanguage string `json:"Content-Language"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload models.GetFleetsFleetIDMembersOKBody `json:"body,omitempty"`
}

// NewGetFleetsFleetIDMembersOK creates GetFleetsFleetIDMembersOK with default headers values
func NewGetFleetsFleetIDMembersOK() *GetFleetsFleetIDMembersOK {
	return &GetFleetsFleetIDMembersOK{}
}

// WithCacheControl adds the cacheControl to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) WithCacheControl(cacheControl string) *GetFleetsFleetIDMembersOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithContentLanguage adds the contentLanguage to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) WithContentLanguage(contentLanguage string) *GetFleetsFleetIDMembersOK {
	o.ContentLanguage = contentLanguage
	return o
}

// SetContentLanguage sets the contentLanguage to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) SetContentLanguage(contentLanguage string) {
	o.ContentLanguage = contentLanguage
}

// WithExpires adds the expires to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) WithExpires(expires string) *GetFleetsFleetIDMembersOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) WithLastModified(lastModified string) *GetFleetsFleetIDMembersOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) WithPayload(payload models.GetFleetsFleetIDMembersOKBody) *GetFleetsFleetIDMembersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fleets fleet Id members o k response
func (o *GetFleetsFleetIDMembersOK) SetPayload(payload models.GetFleetsFleetIDMembersOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFleetsFleetIDMembersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Content-Language

	contentLanguage := o.ContentLanguage
	if contentLanguage != "" {
		rw.Header().Set("Content-Language", contentLanguage)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetFleetsFleetIDMembersOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetFleetsFleetIDMembersForbiddenCode is the HTTP code returned for type GetFleetsFleetIDMembersForbidden
const GetFleetsFleetIDMembersForbiddenCode int = 403

/*GetFleetsFleetIDMembersForbidden Forbidden

swagger:response getFleetsFleetIdMembersForbidden
*/
type GetFleetsFleetIDMembersForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetFleetsFleetIDMembersForbiddenBody `json:"body,omitempty"`
}

// NewGetFleetsFleetIDMembersForbidden creates GetFleetsFleetIDMembersForbidden with default headers values
func NewGetFleetsFleetIDMembersForbidden() *GetFleetsFleetIDMembersForbidden {
	return &GetFleetsFleetIDMembersForbidden{}
}

// WithPayload adds the payload to the get fleets fleet Id members forbidden response
func (o *GetFleetsFleetIDMembersForbidden) WithPayload(payload *models.GetFleetsFleetIDMembersForbiddenBody) *GetFleetsFleetIDMembersForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fleets fleet Id members forbidden response
func (o *GetFleetsFleetIDMembersForbidden) SetPayload(payload *models.GetFleetsFleetIDMembersForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFleetsFleetIDMembersForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFleetsFleetIDMembersNotFoundCode is the HTTP code returned for type GetFleetsFleetIDMembersNotFound
const GetFleetsFleetIDMembersNotFoundCode int = 404

/*GetFleetsFleetIDMembersNotFound The fleet does not exist or you don't have access to it

swagger:response getFleetsFleetIdMembersNotFound
*/
type GetFleetsFleetIDMembersNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GetFleetsFleetIDMembersNotFoundBody `json:"body,omitempty"`
}

// NewGetFleetsFleetIDMembersNotFound creates GetFleetsFleetIDMembersNotFound with default headers values
func NewGetFleetsFleetIDMembersNotFound() *GetFleetsFleetIDMembersNotFound {
	return &GetFleetsFleetIDMembersNotFound{}
}

// WithPayload adds the payload to the get fleets fleet Id members not found response
func (o *GetFleetsFleetIDMembersNotFound) WithPayload(payload *models.GetFleetsFleetIDMembersNotFoundBody) *GetFleetsFleetIDMembersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fleets fleet Id members not found response
func (o *GetFleetsFleetIDMembersNotFound) SetPayload(payload *models.GetFleetsFleetIDMembersNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFleetsFleetIDMembersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFleetsFleetIDMembersInternalServerErrorCode is the HTTP code returned for type GetFleetsFleetIDMembersInternalServerError
const GetFleetsFleetIDMembersInternalServerErrorCode int = 500

/*GetFleetsFleetIDMembersInternalServerError Internal server error

swagger:response getFleetsFleetIdMembersInternalServerError
*/
type GetFleetsFleetIDMembersInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetFleetsFleetIDMembersInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetFleetsFleetIDMembersInternalServerError creates GetFleetsFleetIDMembersInternalServerError with default headers values
func NewGetFleetsFleetIDMembersInternalServerError() *GetFleetsFleetIDMembersInternalServerError {
	return &GetFleetsFleetIDMembersInternalServerError{}
}

// WithPayload adds the payload to the get fleets fleet Id members internal server error response
func (o *GetFleetsFleetIDMembersInternalServerError) WithPayload(payload *models.GetFleetsFleetIDMembersInternalServerErrorBody) *GetFleetsFleetIDMembersInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fleets fleet Id members internal server error response
func (o *GetFleetsFleetIDMembersInternalServerError) SetPayload(payload *models.GetFleetsFleetIDMembersInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFleetsFleetIDMembersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
