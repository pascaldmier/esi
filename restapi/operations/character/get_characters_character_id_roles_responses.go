package character

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDRolesOKCode is the HTTP code returned for type GetCharactersCharacterIDRolesOK
const GetCharactersCharacterIDRolesOKCode int = 200

/*GetCharactersCharacterIDRolesOK The character's roles in thier corporation

swagger:response getCharactersCharacterIdRolesOK
*/
type GetCharactersCharacterIDRolesOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*200 ok array
	  Max Items: 50
	  Unique: true
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDRolesOK creates GetCharactersCharacterIDRolesOK with default headers values
func NewGetCharactersCharacterIDRolesOK() *GetCharactersCharacterIDRolesOK {
	return &GetCharactersCharacterIDRolesOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id roles o k response
func (o *GetCharactersCharacterIDRolesOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDRolesOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id roles o k response
func (o *GetCharactersCharacterIDRolesOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id roles o k response
func (o *GetCharactersCharacterIDRolesOK) WithExpires(expires string) *GetCharactersCharacterIDRolesOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id roles o k response
func (o *GetCharactersCharacterIDRolesOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id roles o k response
func (o *GetCharactersCharacterIDRolesOK) WithLastModified(lastModified string) *GetCharactersCharacterIDRolesOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id roles o k response
func (o *GetCharactersCharacterIDRolesOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id roles o k response
func (o *GetCharactersCharacterIDRolesOK) WithPayload(payload []string) *GetCharactersCharacterIDRolesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id roles o k response
func (o *GetCharactersCharacterIDRolesOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDRolesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetCharactersCharacterIDRolesForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDRolesForbidden
const GetCharactersCharacterIDRolesForbiddenCode int = 403

/*GetCharactersCharacterIDRolesForbidden Forbidden

swagger:response getCharactersCharacterIdRolesForbidden
*/
type GetCharactersCharacterIDRolesForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDRolesForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDRolesForbidden creates GetCharactersCharacterIDRolesForbidden with default headers values
func NewGetCharactersCharacterIDRolesForbidden() *GetCharactersCharacterIDRolesForbidden {
	return &GetCharactersCharacterIDRolesForbidden{}
}

// WithPayload adds the payload to the get characters character Id roles forbidden response
func (o *GetCharactersCharacterIDRolesForbidden) WithPayload(payload *models.GetCharactersCharacterIDRolesForbiddenBody) *GetCharactersCharacterIDRolesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id roles forbidden response
func (o *GetCharactersCharacterIDRolesForbidden) SetPayload(payload *models.GetCharactersCharacterIDRolesForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDRolesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDRolesInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDRolesInternalServerError
const GetCharactersCharacterIDRolesInternalServerErrorCode int = 500

/*GetCharactersCharacterIDRolesInternalServerError Internal server error

swagger:response getCharactersCharacterIdRolesInternalServerError
*/
type GetCharactersCharacterIDRolesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDRolesInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDRolesInternalServerError creates GetCharactersCharacterIDRolesInternalServerError with default headers values
func NewGetCharactersCharacterIDRolesInternalServerError() *GetCharactersCharacterIDRolesInternalServerError {
	return &GetCharactersCharacterIDRolesInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id roles internal server error response
func (o *GetCharactersCharacterIDRolesInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDRolesInternalServerErrorBody) *GetCharactersCharacterIDRolesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id roles internal server error response
func (o *GetCharactersCharacterIDRolesInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDRolesInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDRolesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
