package skills

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDSkillsOKCode is the HTTP code returned for type GetCharactersCharacterIDSkillsOK
const GetCharactersCharacterIDSkillsOKCode int = 200

/*GetCharactersCharacterIDSkillsOK Known skills for the character

swagger:response getCharactersCharacterIdSkillsOK
*/
type GetCharactersCharacterIDSkillsOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDSkillsOKBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDSkillsOK creates GetCharactersCharacterIDSkillsOK with default headers values
func NewGetCharactersCharacterIDSkillsOK() *GetCharactersCharacterIDSkillsOK {
	return &GetCharactersCharacterIDSkillsOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id skills o k response
func (o *GetCharactersCharacterIDSkillsOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDSkillsOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id skills o k response
func (o *GetCharactersCharacterIDSkillsOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id skills o k response
func (o *GetCharactersCharacterIDSkillsOK) WithExpires(expires string) *GetCharactersCharacterIDSkillsOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id skills o k response
func (o *GetCharactersCharacterIDSkillsOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id skills o k response
func (o *GetCharactersCharacterIDSkillsOK) WithLastModified(lastModified string) *GetCharactersCharacterIDSkillsOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id skills o k response
func (o *GetCharactersCharacterIDSkillsOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id skills o k response
func (o *GetCharactersCharacterIDSkillsOK) WithPayload(payload *models.GetCharactersCharacterIDSkillsOKBody) *GetCharactersCharacterIDSkillsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id skills o k response
func (o *GetCharactersCharacterIDSkillsOK) SetPayload(payload *models.GetCharactersCharacterIDSkillsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDSkillsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDSkillsForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDSkillsForbidden
const GetCharactersCharacterIDSkillsForbiddenCode int = 403

/*GetCharactersCharacterIDSkillsForbidden Forbidden

swagger:response getCharactersCharacterIdSkillsForbidden
*/
type GetCharactersCharacterIDSkillsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDSkillsForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDSkillsForbidden creates GetCharactersCharacterIDSkillsForbidden with default headers values
func NewGetCharactersCharacterIDSkillsForbidden() *GetCharactersCharacterIDSkillsForbidden {
	return &GetCharactersCharacterIDSkillsForbidden{}
}

// WithPayload adds the payload to the get characters character Id skills forbidden response
func (o *GetCharactersCharacterIDSkillsForbidden) WithPayload(payload *models.GetCharactersCharacterIDSkillsForbiddenBody) *GetCharactersCharacterIDSkillsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id skills forbidden response
func (o *GetCharactersCharacterIDSkillsForbidden) SetPayload(payload *models.GetCharactersCharacterIDSkillsForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDSkillsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDSkillsInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDSkillsInternalServerError
const GetCharactersCharacterIDSkillsInternalServerErrorCode int = 500

/*GetCharactersCharacterIDSkillsInternalServerError Internal server error

swagger:response getCharactersCharacterIdSkillsInternalServerError
*/
type GetCharactersCharacterIDSkillsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDSkillsInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDSkillsInternalServerError creates GetCharactersCharacterIDSkillsInternalServerError with default headers values
func NewGetCharactersCharacterIDSkillsInternalServerError() *GetCharactersCharacterIDSkillsInternalServerError {
	return &GetCharactersCharacterIDSkillsInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id skills internal server error response
func (o *GetCharactersCharacterIDSkillsInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDSkillsInternalServerErrorBody) *GetCharactersCharacterIDSkillsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id skills internal server error response
func (o *GetCharactersCharacterIDSkillsInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDSkillsInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDSkillsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
