package skills

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDSkillqueueOKCode is the HTTP code returned for type GetCharactersCharacterIDSkillqueueOK
const GetCharactersCharacterIDSkillqueueOKCode int = 200

/*GetCharactersCharacterIDSkillqueueOK The current skill queue, sorted ascending by finishing time

swagger:response getCharactersCharacterIdSkillqueueOK
*/
type GetCharactersCharacterIDSkillqueueOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload models.GetCharactersCharacterIDSkillqueueOKBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDSkillqueueOK creates GetCharactersCharacterIDSkillqueueOK with default headers values
func NewGetCharactersCharacterIDSkillqueueOK() *GetCharactersCharacterIDSkillqueueOK {
	return &GetCharactersCharacterIDSkillqueueOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id skillqueue o k response
func (o *GetCharactersCharacterIDSkillqueueOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDSkillqueueOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id skillqueue o k response
func (o *GetCharactersCharacterIDSkillqueueOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id skillqueue o k response
func (o *GetCharactersCharacterIDSkillqueueOK) WithExpires(expires string) *GetCharactersCharacterIDSkillqueueOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id skillqueue o k response
func (o *GetCharactersCharacterIDSkillqueueOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id skillqueue o k response
func (o *GetCharactersCharacterIDSkillqueueOK) WithLastModified(lastModified string) *GetCharactersCharacterIDSkillqueueOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id skillqueue o k response
func (o *GetCharactersCharacterIDSkillqueueOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id skillqueue o k response
func (o *GetCharactersCharacterIDSkillqueueOK) WithPayload(payload models.GetCharactersCharacterIDSkillqueueOKBody) *GetCharactersCharacterIDSkillqueueOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id skillqueue o k response
func (o *GetCharactersCharacterIDSkillqueueOK) SetPayload(payload models.GetCharactersCharacterIDSkillqueueOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDSkillqueueOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetCharactersCharacterIDSkillqueueOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetCharactersCharacterIDSkillqueueForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDSkillqueueForbidden
const GetCharactersCharacterIDSkillqueueForbiddenCode int = 403

/*GetCharactersCharacterIDSkillqueueForbidden Forbidden

swagger:response getCharactersCharacterIdSkillqueueForbidden
*/
type GetCharactersCharacterIDSkillqueueForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDSkillqueueForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDSkillqueueForbidden creates GetCharactersCharacterIDSkillqueueForbidden with default headers values
func NewGetCharactersCharacterIDSkillqueueForbidden() *GetCharactersCharacterIDSkillqueueForbidden {
	return &GetCharactersCharacterIDSkillqueueForbidden{}
}

// WithPayload adds the payload to the get characters character Id skillqueue forbidden response
func (o *GetCharactersCharacterIDSkillqueueForbidden) WithPayload(payload *models.GetCharactersCharacterIDSkillqueueForbiddenBody) *GetCharactersCharacterIDSkillqueueForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id skillqueue forbidden response
func (o *GetCharactersCharacterIDSkillqueueForbidden) SetPayload(payload *models.GetCharactersCharacterIDSkillqueueForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDSkillqueueForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDSkillqueueInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDSkillqueueInternalServerError
const GetCharactersCharacterIDSkillqueueInternalServerErrorCode int = 500

/*GetCharactersCharacterIDSkillqueueInternalServerError Internal server error

swagger:response getCharactersCharacterIdSkillqueueInternalServerError
*/
type GetCharactersCharacterIDSkillqueueInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDSkillqueueInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDSkillqueueInternalServerError creates GetCharactersCharacterIDSkillqueueInternalServerError with default headers values
func NewGetCharactersCharacterIDSkillqueueInternalServerError() *GetCharactersCharacterIDSkillqueueInternalServerError {
	return &GetCharactersCharacterIDSkillqueueInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id skillqueue internal server error response
func (o *GetCharactersCharacterIDSkillqueueInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDSkillqueueInternalServerErrorBody) *GetCharactersCharacterIDSkillqueueInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id skillqueue internal server error response
func (o *GetCharactersCharacterIDSkillqueueInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDSkillqueueInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDSkillqueueInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
