package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// PostCharactersCharacterIDMailCreatedCode is the HTTP code returned for type PostCharactersCharacterIDMailCreated
const PostCharactersCharacterIDMailCreatedCode int = 201

/*PostCharactersCharacterIDMailCreated Mail created

swagger:response postCharactersCharacterIdMailCreated
*/
type PostCharactersCharacterIDMailCreated struct {

	/*Mail ID
	  In: Body
	*/
	Payload int32 `json:"body,omitempty"`
}

// NewPostCharactersCharacterIDMailCreated creates PostCharactersCharacterIDMailCreated with default headers values
func NewPostCharactersCharacterIDMailCreated() *PostCharactersCharacterIDMailCreated {
	return &PostCharactersCharacterIDMailCreated{}
}

// WithPayload adds the payload to the post characters character Id mail created response
func (o *PostCharactersCharacterIDMailCreated) WithPayload(payload int32) *PostCharactersCharacterIDMailCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post characters character Id mail created response
func (o *PostCharactersCharacterIDMailCreated) SetPayload(payload int32) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCharactersCharacterIDMailCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PostCharactersCharacterIDMailBadRequestCode is the HTTP code returned for type PostCharactersCharacterIDMailBadRequest
const PostCharactersCharacterIDMailBadRequestCode int = 400

/*PostCharactersCharacterIDMailBadRequest Only one corporation, alliance, or mailing list can be the recipient of a mail

swagger:response postCharactersCharacterIdMailBadRequest
*/
type PostCharactersCharacterIDMailBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.PostCharactersCharacterIDMailBadRequestBody `json:"body,omitempty"`
}

// NewPostCharactersCharacterIDMailBadRequest creates PostCharactersCharacterIDMailBadRequest with default headers values
func NewPostCharactersCharacterIDMailBadRequest() *PostCharactersCharacterIDMailBadRequest {
	return &PostCharactersCharacterIDMailBadRequest{}
}

// WithPayload adds the payload to the post characters character Id mail bad request response
func (o *PostCharactersCharacterIDMailBadRequest) WithPayload(payload *models.PostCharactersCharacterIDMailBadRequestBody) *PostCharactersCharacterIDMailBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post characters character Id mail bad request response
func (o *PostCharactersCharacterIDMailBadRequest) SetPayload(payload *models.PostCharactersCharacterIDMailBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCharactersCharacterIDMailBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCharactersCharacterIDMailForbiddenCode is the HTTP code returned for type PostCharactersCharacterIDMailForbidden
const PostCharactersCharacterIDMailForbiddenCode int = 403

/*PostCharactersCharacterIDMailForbidden Forbidden

swagger:response postCharactersCharacterIdMailForbidden
*/
type PostCharactersCharacterIDMailForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.PostCharactersCharacterIDMailForbiddenBody `json:"body,omitempty"`
}

// NewPostCharactersCharacterIDMailForbidden creates PostCharactersCharacterIDMailForbidden with default headers values
func NewPostCharactersCharacterIDMailForbidden() *PostCharactersCharacterIDMailForbidden {
	return &PostCharactersCharacterIDMailForbidden{}
}

// WithPayload adds the payload to the post characters character Id mail forbidden response
func (o *PostCharactersCharacterIDMailForbidden) WithPayload(payload *models.PostCharactersCharacterIDMailForbiddenBody) *PostCharactersCharacterIDMailForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post characters character Id mail forbidden response
func (o *PostCharactersCharacterIDMailForbidden) SetPayload(payload *models.PostCharactersCharacterIDMailForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCharactersCharacterIDMailForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCharactersCharacterIDMailInternalServerErrorCode is the HTTP code returned for type PostCharactersCharacterIDMailInternalServerError
const PostCharactersCharacterIDMailInternalServerErrorCode int = 500

/*PostCharactersCharacterIDMailInternalServerError Internal server error

swagger:response postCharactersCharacterIdMailInternalServerError
*/
type PostCharactersCharacterIDMailInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.PostCharactersCharacterIDMailInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostCharactersCharacterIDMailInternalServerError creates PostCharactersCharacterIDMailInternalServerError with default headers values
func NewPostCharactersCharacterIDMailInternalServerError() *PostCharactersCharacterIDMailInternalServerError {
	return &PostCharactersCharacterIDMailInternalServerError{}
}

// WithPayload adds the payload to the post characters character Id mail internal server error response
func (o *PostCharactersCharacterIDMailInternalServerError) WithPayload(payload *models.PostCharactersCharacterIDMailInternalServerErrorBody) *PostCharactersCharacterIDMailInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post characters character Id mail internal server error response
func (o *PostCharactersCharacterIDMailInternalServerError) SetPayload(payload *models.PostCharactersCharacterIDMailInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCharactersCharacterIDMailInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
