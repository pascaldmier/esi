package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDMailMailIDOKCode is the HTTP code returned for type GetCharactersCharacterIDMailMailIDOK
const GetCharactersCharacterIDMailMailIDOKCode int = 200

/*GetCharactersCharacterIDMailMailIDOK Contents of a mail

swagger:response getCharactersCharacterIdMailMailIdOK
*/
type GetCharactersCharacterIDMailMailIDOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDMailMailIDOKBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDMailMailIDOK creates GetCharactersCharacterIDMailMailIDOK with default headers values
func NewGetCharactersCharacterIDMailMailIDOK() *GetCharactersCharacterIDMailMailIDOK {
	return &GetCharactersCharacterIDMailMailIDOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id mail mail Id o k response
func (o *GetCharactersCharacterIDMailMailIDOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDMailMailIDOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id mail mail Id o k response
func (o *GetCharactersCharacterIDMailMailIDOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id mail mail Id o k response
func (o *GetCharactersCharacterIDMailMailIDOK) WithExpires(expires string) *GetCharactersCharacterIDMailMailIDOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id mail mail Id o k response
func (o *GetCharactersCharacterIDMailMailIDOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id mail mail Id o k response
func (o *GetCharactersCharacterIDMailMailIDOK) WithLastModified(lastModified string) *GetCharactersCharacterIDMailMailIDOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id mail mail Id o k response
func (o *GetCharactersCharacterIDMailMailIDOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id mail mail Id o k response
func (o *GetCharactersCharacterIDMailMailIDOK) WithPayload(payload *models.GetCharactersCharacterIDMailMailIDOKBody) *GetCharactersCharacterIDMailMailIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id mail mail Id o k response
func (o *GetCharactersCharacterIDMailMailIDOK) SetPayload(payload *models.GetCharactersCharacterIDMailMailIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDMailMailIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDMailMailIDForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDMailMailIDForbidden
const GetCharactersCharacterIDMailMailIDForbiddenCode int = 403

/*GetCharactersCharacterIDMailMailIDForbidden Forbidden

swagger:response getCharactersCharacterIdMailMailIdForbidden
*/
type GetCharactersCharacterIDMailMailIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDMailMailIDForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDMailMailIDForbidden creates GetCharactersCharacterIDMailMailIDForbidden with default headers values
func NewGetCharactersCharacterIDMailMailIDForbidden() *GetCharactersCharacterIDMailMailIDForbidden {
	return &GetCharactersCharacterIDMailMailIDForbidden{}
}

// WithPayload adds the payload to the get characters character Id mail mail Id forbidden response
func (o *GetCharactersCharacterIDMailMailIDForbidden) WithPayload(payload *models.GetCharactersCharacterIDMailMailIDForbiddenBody) *GetCharactersCharacterIDMailMailIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id mail mail Id forbidden response
func (o *GetCharactersCharacterIDMailMailIDForbidden) SetPayload(payload *models.GetCharactersCharacterIDMailMailIDForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDMailMailIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDMailMailIDNotFoundCode is the HTTP code returned for type GetCharactersCharacterIDMailMailIDNotFound
const GetCharactersCharacterIDMailMailIDNotFoundCode int = 404

/*GetCharactersCharacterIDMailMailIDNotFound Mail not found

swagger:response getCharactersCharacterIdMailMailIdNotFound
*/
type GetCharactersCharacterIDMailMailIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDMailMailIDNotFoundBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDMailMailIDNotFound creates GetCharactersCharacterIDMailMailIDNotFound with default headers values
func NewGetCharactersCharacterIDMailMailIDNotFound() *GetCharactersCharacterIDMailMailIDNotFound {
	return &GetCharactersCharacterIDMailMailIDNotFound{}
}

// WithPayload adds the payload to the get characters character Id mail mail Id not found response
func (o *GetCharactersCharacterIDMailMailIDNotFound) WithPayload(payload *models.GetCharactersCharacterIDMailMailIDNotFoundBody) *GetCharactersCharacterIDMailMailIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id mail mail Id not found response
func (o *GetCharactersCharacterIDMailMailIDNotFound) SetPayload(payload *models.GetCharactersCharacterIDMailMailIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDMailMailIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDMailMailIDInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDMailMailIDInternalServerError
const GetCharactersCharacterIDMailMailIDInternalServerErrorCode int = 500

/*GetCharactersCharacterIDMailMailIDInternalServerError Internal server error

swagger:response getCharactersCharacterIdMailMailIdInternalServerError
*/
type GetCharactersCharacterIDMailMailIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDMailMailIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDMailMailIDInternalServerError creates GetCharactersCharacterIDMailMailIDInternalServerError with default headers values
func NewGetCharactersCharacterIDMailMailIDInternalServerError() *GetCharactersCharacterIDMailMailIDInternalServerError {
	return &GetCharactersCharacterIDMailMailIDInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id mail mail Id internal server error response
func (o *GetCharactersCharacterIDMailMailIDInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDMailMailIDInternalServerErrorBody) *GetCharactersCharacterIDMailMailIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id mail mail Id internal server error response
func (o *GetCharactersCharacterIDMailMailIDInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDMailMailIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDMailMailIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
