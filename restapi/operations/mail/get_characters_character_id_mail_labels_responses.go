package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDMailLabelsOKCode is the HTTP code returned for type GetCharactersCharacterIDMailLabelsOK
const GetCharactersCharacterIDMailLabelsOKCode int = 200

/*GetCharactersCharacterIDMailLabelsOK A list of mail labels and unread counts

swagger:response getCharactersCharacterIdMailLabelsOK
*/
type GetCharactersCharacterIDMailLabelsOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDMailLabelsOKBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDMailLabelsOK creates GetCharactersCharacterIDMailLabelsOK with default headers values
func NewGetCharactersCharacterIDMailLabelsOK() *GetCharactersCharacterIDMailLabelsOK {
	return &GetCharactersCharacterIDMailLabelsOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id mail labels o k response
func (o *GetCharactersCharacterIDMailLabelsOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDMailLabelsOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id mail labels o k response
func (o *GetCharactersCharacterIDMailLabelsOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id mail labels o k response
func (o *GetCharactersCharacterIDMailLabelsOK) WithExpires(expires string) *GetCharactersCharacterIDMailLabelsOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id mail labels o k response
func (o *GetCharactersCharacterIDMailLabelsOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id mail labels o k response
func (o *GetCharactersCharacterIDMailLabelsOK) WithLastModified(lastModified string) *GetCharactersCharacterIDMailLabelsOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id mail labels o k response
func (o *GetCharactersCharacterIDMailLabelsOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id mail labels o k response
func (o *GetCharactersCharacterIDMailLabelsOK) WithPayload(payload *models.GetCharactersCharacterIDMailLabelsOKBody) *GetCharactersCharacterIDMailLabelsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id mail labels o k response
func (o *GetCharactersCharacterIDMailLabelsOK) SetPayload(payload *models.GetCharactersCharacterIDMailLabelsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDMailLabelsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDMailLabelsForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDMailLabelsForbidden
const GetCharactersCharacterIDMailLabelsForbiddenCode int = 403

/*GetCharactersCharacterIDMailLabelsForbidden Forbidden

swagger:response getCharactersCharacterIdMailLabelsForbidden
*/
type GetCharactersCharacterIDMailLabelsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDMailLabelsForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDMailLabelsForbidden creates GetCharactersCharacterIDMailLabelsForbidden with default headers values
func NewGetCharactersCharacterIDMailLabelsForbidden() *GetCharactersCharacterIDMailLabelsForbidden {
	return &GetCharactersCharacterIDMailLabelsForbidden{}
}

// WithPayload adds the payload to the get characters character Id mail labels forbidden response
func (o *GetCharactersCharacterIDMailLabelsForbidden) WithPayload(payload *models.GetCharactersCharacterIDMailLabelsForbiddenBody) *GetCharactersCharacterIDMailLabelsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id mail labels forbidden response
func (o *GetCharactersCharacterIDMailLabelsForbidden) SetPayload(payload *models.GetCharactersCharacterIDMailLabelsForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDMailLabelsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDMailLabelsInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDMailLabelsInternalServerError
const GetCharactersCharacterIDMailLabelsInternalServerErrorCode int = 500

/*GetCharactersCharacterIDMailLabelsInternalServerError Internal server error

swagger:response getCharactersCharacterIdMailLabelsInternalServerError
*/
type GetCharactersCharacterIDMailLabelsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDMailLabelsInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDMailLabelsInternalServerError creates GetCharactersCharacterIDMailLabelsInternalServerError with default headers values
func NewGetCharactersCharacterIDMailLabelsInternalServerError() *GetCharactersCharacterIDMailLabelsInternalServerError {
	return &GetCharactersCharacterIDMailLabelsInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id mail labels internal server error response
func (o *GetCharactersCharacterIDMailLabelsInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDMailLabelsInternalServerErrorBody) *GetCharactersCharacterIDMailLabelsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id mail labels internal server error response
func (o *GetCharactersCharacterIDMailLabelsInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDMailLabelsInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDMailLabelsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
