package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// PutCharactersCharacterIDMailMailIDNoContentCode is the HTTP code returned for type PutCharactersCharacterIDMailMailIDNoContent
const PutCharactersCharacterIDMailMailIDNoContentCode int = 204

/*PutCharactersCharacterIDMailMailIDNoContent Mail updated

swagger:response putCharactersCharacterIdMailMailIdNoContent
*/
type PutCharactersCharacterIDMailMailIDNoContent struct {
}

// NewPutCharactersCharacterIDMailMailIDNoContent creates PutCharactersCharacterIDMailMailIDNoContent with default headers values
func NewPutCharactersCharacterIDMailMailIDNoContent() *PutCharactersCharacterIDMailMailIDNoContent {
	return &PutCharactersCharacterIDMailMailIDNoContent{}
}

// WriteResponse to the client
func (o *PutCharactersCharacterIDMailMailIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

// PutCharactersCharacterIDMailMailIDBadRequestCode is the HTTP code returned for type PutCharactersCharacterIDMailMailIDBadRequest
const PutCharactersCharacterIDMailMailIDBadRequestCode int = 400

/*PutCharactersCharacterIDMailMailIDBadRequest Invalid label ID; or No parameters in body -- nothing to do

swagger:response putCharactersCharacterIdMailMailIdBadRequest
*/
type PutCharactersCharacterIDMailMailIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.PutCharactersCharacterIDMailMailIDBadRequestBody `json:"body,omitempty"`
}

// NewPutCharactersCharacterIDMailMailIDBadRequest creates PutCharactersCharacterIDMailMailIDBadRequest with default headers values
func NewPutCharactersCharacterIDMailMailIDBadRequest() *PutCharactersCharacterIDMailMailIDBadRequest {
	return &PutCharactersCharacterIDMailMailIDBadRequest{}
}

// WithPayload adds the payload to the put characters character Id mail mail Id bad request response
func (o *PutCharactersCharacterIDMailMailIDBadRequest) WithPayload(payload *models.PutCharactersCharacterIDMailMailIDBadRequestBody) *PutCharactersCharacterIDMailMailIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put characters character Id mail mail Id bad request response
func (o *PutCharactersCharacterIDMailMailIDBadRequest) SetPayload(payload *models.PutCharactersCharacterIDMailMailIDBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCharactersCharacterIDMailMailIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutCharactersCharacterIDMailMailIDForbiddenCode is the HTTP code returned for type PutCharactersCharacterIDMailMailIDForbidden
const PutCharactersCharacterIDMailMailIDForbiddenCode int = 403

/*PutCharactersCharacterIDMailMailIDForbidden Forbidden

swagger:response putCharactersCharacterIdMailMailIdForbidden
*/
type PutCharactersCharacterIDMailMailIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.PutCharactersCharacterIDMailMailIDForbiddenBody `json:"body,omitempty"`
}

// NewPutCharactersCharacterIDMailMailIDForbidden creates PutCharactersCharacterIDMailMailIDForbidden with default headers values
func NewPutCharactersCharacterIDMailMailIDForbidden() *PutCharactersCharacterIDMailMailIDForbidden {
	return &PutCharactersCharacterIDMailMailIDForbidden{}
}

// WithPayload adds the payload to the put characters character Id mail mail Id forbidden response
func (o *PutCharactersCharacterIDMailMailIDForbidden) WithPayload(payload *models.PutCharactersCharacterIDMailMailIDForbiddenBody) *PutCharactersCharacterIDMailMailIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put characters character Id mail mail Id forbidden response
func (o *PutCharactersCharacterIDMailMailIDForbidden) SetPayload(payload *models.PutCharactersCharacterIDMailMailIDForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCharactersCharacterIDMailMailIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutCharactersCharacterIDMailMailIDInternalServerErrorCode is the HTTP code returned for type PutCharactersCharacterIDMailMailIDInternalServerError
const PutCharactersCharacterIDMailMailIDInternalServerErrorCode int = 500

/*PutCharactersCharacterIDMailMailIDInternalServerError Internal server error

swagger:response putCharactersCharacterIdMailMailIdInternalServerError
*/
type PutCharactersCharacterIDMailMailIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.PutCharactersCharacterIDMailMailIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewPutCharactersCharacterIDMailMailIDInternalServerError creates PutCharactersCharacterIDMailMailIDInternalServerError with default headers values
func NewPutCharactersCharacterIDMailMailIDInternalServerError() *PutCharactersCharacterIDMailMailIDInternalServerError {
	return &PutCharactersCharacterIDMailMailIDInternalServerError{}
}

// WithPayload adds the payload to the put characters character Id mail mail Id internal server error response
func (o *PutCharactersCharacterIDMailMailIDInternalServerError) WithPayload(payload *models.PutCharactersCharacterIDMailMailIDInternalServerErrorBody) *PutCharactersCharacterIDMailMailIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put characters character Id mail mail Id internal server error response
func (o *PutCharactersCharacterIDMailMailIDInternalServerError) SetPayload(payload *models.PutCharactersCharacterIDMailMailIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCharactersCharacterIDMailMailIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
