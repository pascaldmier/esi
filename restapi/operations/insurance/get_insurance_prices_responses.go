package insurance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetInsurancePricesOKCode is the HTTP code returned for type GetInsurancePricesOK
const GetInsurancePricesOKCode int = 200

/*GetInsurancePricesOK A list of insurance levels for all ship types

swagger:response getInsurancePricesOK
*/
type GetInsurancePricesOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*The language used in the response
	  Required: true
	*/
	ContentLanguage string `json:"Content-Language"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload models.GetInsurancePricesOKBody `json:"body,omitempty"`
}

// NewGetInsurancePricesOK creates GetInsurancePricesOK with default headers values
func NewGetInsurancePricesOK() *GetInsurancePricesOK {
	return &GetInsurancePricesOK{}
}

// WithCacheControl adds the cacheControl to the get insurance prices o k response
func (o *GetInsurancePricesOK) WithCacheControl(cacheControl string) *GetInsurancePricesOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get insurance prices o k response
func (o *GetInsurancePricesOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithContentLanguage adds the contentLanguage to the get insurance prices o k response
func (o *GetInsurancePricesOK) WithContentLanguage(contentLanguage string) *GetInsurancePricesOK {
	o.ContentLanguage = contentLanguage
	return o
}

// SetContentLanguage sets the contentLanguage to the get insurance prices o k response
func (o *GetInsurancePricesOK) SetContentLanguage(contentLanguage string) {
	o.ContentLanguage = contentLanguage
}

// WithExpires adds the expires to the get insurance prices o k response
func (o *GetInsurancePricesOK) WithExpires(expires string) *GetInsurancePricesOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get insurance prices o k response
func (o *GetInsurancePricesOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get insurance prices o k response
func (o *GetInsurancePricesOK) WithLastModified(lastModified string) *GetInsurancePricesOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get insurance prices o k response
func (o *GetInsurancePricesOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get insurance prices o k response
func (o *GetInsurancePricesOK) WithPayload(payload models.GetInsurancePricesOKBody) *GetInsurancePricesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get insurance prices o k response
func (o *GetInsurancePricesOK) SetPayload(payload models.GetInsurancePricesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInsurancePricesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Content-Language

	contentLanguage := o.ContentLanguage
	if contentLanguage != "" {
		rw.Header().Set("Content-Language", contentLanguage)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetInsurancePricesOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetInsurancePricesInternalServerErrorCode is the HTTP code returned for type GetInsurancePricesInternalServerError
const GetInsurancePricesInternalServerErrorCode int = 500

/*GetInsurancePricesInternalServerError Internal server error

swagger:response getInsurancePricesInternalServerError
*/
type GetInsurancePricesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetInsurancePricesInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetInsurancePricesInternalServerError creates GetInsurancePricesInternalServerError with default headers values
func NewGetInsurancePricesInternalServerError() *GetInsurancePricesInternalServerError {
	return &GetInsurancePricesInternalServerError{}
}

// WithPayload adds the payload to the get insurance prices internal server error response
func (o *GetInsurancePricesInternalServerError) WithPayload(payload *models.GetInsurancePricesInternalServerErrorBody) *GetInsurancePricesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get insurance prices internal server error response
func (o *GetInsurancePricesInternalServerError) SetPayload(payload *models.GetInsurancePricesInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetInsurancePricesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
