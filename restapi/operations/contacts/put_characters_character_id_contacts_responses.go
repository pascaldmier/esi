package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// PutCharactersCharacterIDContactsNoContentCode is the HTTP code returned for type PutCharactersCharacterIDContactsNoContent
const PutCharactersCharacterIDContactsNoContentCode int = 204

/*PutCharactersCharacterIDContactsNoContent Contacts updated

swagger:response putCharactersCharacterIdContactsNoContent
*/
type PutCharactersCharacterIDContactsNoContent struct {
}

// NewPutCharactersCharacterIDContactsNoContent creates PutCharactersCharacterIDContactsNoContent with default headers values
func NewPutCharactersCharacterIDContactsNoContent() *PutCharactersCharacterIDContactsNoContent {
	return &PutCharactersCharacterIDContactsNoContent{}
}

// WriteResponse to the client
func (o *PutCharactersCharacterIDContactsNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
}

// PutCharactersCharacterIDContactsForbiddenCode is the HTTP code returned for type PutCharactersCharacterIDContactsForbidden
const PutCharactersCharacterIDContactsForbiddenCode int = 403

/*PutCharactersCharacterIDContactsForbidden Forbidden

swagger:response putCharactersCharacterIdContactsForbidden
*/
type PutCharactersCharacterIDContactsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.PutCharactersCharacterIDContactsForbiddenBody `json:"body,omitempty"`
}

// NewPutCharactersCharacterIDContactsForbidden creates PutCharactersCharacterIDContactsForbidden with default headers values
func NewPutCharactersCharacterIDContactsForbidden() *PutCharactersCharacterIDContactsForbidden {
	return &PutCharactersCharacterIDContactsForbidden{}
}

// WithPayload adds the payload to the put characters character Id contacts forbidden response
func (o *PutCharactersCharacterIDContactsForbidden) WithPayload(payload *models.PutCharactersCharacterIDContactsForbiddenBody) *PutCharactersCharacterIDContactsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put characters character Id contacts forbidden response
func (o *PutCharactersCharacterIDContactsForbidden) SetPayload(payload *models.PutCharactersCharacterIDContactsForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCharactersCharacterIDContactsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutCharactersCharacterIDContactsInternalServerErrorCode is the HTTP code returned for type PutCharactersCharacterIDContactsInternalServerError
const PutCharactersCharacterIDContactsInternalServerErrorCode int = 500

/*PutCharactersCharacterIDContactsInternalServerError Internal server error

swagger:response putCharactersCharacterIdContactsInternalServerError
*/
type PutCharactersCharacterIDContactsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.PutCharactersCharacterIDContactsInternalServerErrorBody `json:"body,omitempty"`
}

// NewPutCharactersCharacterIDContactsInternalServerError creates PutCharactersCharacterIDContactsInternalServerError with default headers values
func NewPutCharactersCharacterIDContactsInternalServerError() *PutCharactersCharacterIDContactsInternalServerError {
	return &PutCharactersCharacterIDContactsInternalServerError{}
}

// WithPayload adds the payload to the put characters character Id contacts internal server error response
func (o *PutCharactersCharacterIDContactsInternalServerError) WithPayload(payload *models.PutCharactersCharacterIDContactsInternalServerErrorBody) *PutCharactersCharacterIDContactsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put characters character Id contacts internal server error response
func (o *PutCharactersCharacterIDContactsInternalServerError) SetPayload(payload *models.PutCharactersCharacterIDContactsInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCharactersCharacterIDContactsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
