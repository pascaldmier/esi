package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDContactsOKCode is the HTTP code returned for type GetCharactersCharacterIDContactsOK
const GetCharactersCharacterIDContactsOKCode int = 200

/*GetCharactersCharacterIDContactsOK A list of contacts

swagger:response getCharactersCharacterIdContactsOK
*/
type GetCharactersCharacterIDContactsOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload models.GetCharactersCharacterIDContactsOKBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDContactsOK creates GetCharactersCharacterIDContactsOK with default headers values
func NewGetCharactersCharacterIDContactsOK() *GetCharactersCharacterIDContactsOK {
	return &GetCharactersCharacterIDContactsOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id contacts o k response
func (o *GetCharactersCharacterIDContactsOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDContactsOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id contacts o k response
func (o *GetCharactersCharacterIDContactsOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id contacts o k response
func (o *GetCharactersCharacterIDContactsOK) WithExpires(expires string) *GetCharactersCharacterIDContactsOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id contacts o k response
func (o *GetCharactersCharacterIDContactsOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id contacts o k response
func (o *GetCharactersCharacterIDContactsOK) WithLastModified(lastModified string) *GetCharactersCharacterIDContactsOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id contacts o k response
func (o *GetCharactersCharacterIDContactsOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id contacts o k response
func (o *GetCharactersCharacterIDContactsOK) WithPayload(payload models.GetCharactersCharacterIDContactsOKBody) *GetCharactersCharacterIDContactsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id contacts o k response
func (o *GetCharactersCharacterIDContactsOK) SetPayload(payload models.GetCharactersCharacterIDContactsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDContactsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetCharactersCharacterIDContactsOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetCharactersCharacterIDContactsForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDContactsForbidden
const GetCharactersCharacterIDContactsForbiddenCode int = 403

/*GetCharactersCharacterIDContactsForbidden Forbidden

swagger:response getCharactersCharacterIdContactsForbidden
*/
type GetCharactersCharacterIDContactsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDContactsForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDContactsForbidden creates GetCharactersCharacterIDContactsForbidden with default headers values
func NewGetCharactersCharacterIDContactsForbidden() *GetCharactersCharacterIDContactsForbidden {
	return &GetCharactersCharacterIDContactsForbidden{}
}

// WithPayload adds the payload to the get characters character Id contacts forbidden response
func (o *GetCharactersCharacterIDContactsForbidden) WithPayload(payload *models.GetCharactersCharacterIDContactsForbiddenBody) *GetCharactersCharacterIDContactsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id contacts forbidden response
func (o *GetCharactersCharacterIDContactsForbidden) SetPayload(payload *models.GetCharactersCharacterIDContactsForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDContactsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDContactsInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDContactsInternalServerError
const GetCharactersCharacterIDContactsInternalServerErrorCode int = 500

/*GetCharactersCharacterIDContactsInternalServerError Internal server error

swagger:response getCharactersCharacterIdContactsInternalServerError
*/
type GetCharactersCharacterIDContactsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDContactsInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDContactsInternalServerError creates GetCharactersCharacterIDContactsInternalServerError with default headers values
func NewGetCharactersCharacterIDContactsInternalServerError() *GetCharactersCharacterIDContactsInternalServerError {
	return &GetCharactersCharacterIDContactsInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id contacts internal server error response
func (o *GetCharactersCharacterIDContactsInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDContactsInternalServerErrorBody) *GetCharactersCharacterIDContactsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id contacts internal server error response
func (o *GetCharactersCharacterIDContactsInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDContactsInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDContactsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
