package contacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetCharactersCharacterIDContactsLabelsOKCode is the HTTP code returned for type GetCharactersCharacterIDContactsLabelsOK
const GetCharactersCharacterIDContactsLabelsOKCode int = 200

/*GetCharactersCharacterIDContactsLabelsOK A list of contact labels

swagger:response getCharactersCharacterIdContactsLabelsOK
*/
type GetCharactersCharacterIDContactsLabelsOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload models.GetCharactersCharacterIDContactsLabelsOKBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDContactsLabelsOK creates GetCharactersCharacterIDContactsLabelsOK with default headers values
func NewGetCharactersCharacterIDContactsLabelsOK() *GetCharactersCharacterIDContactsLabelsOK {
	return &GetCharactersCharacterIDContactsLabelsOK{}
}

// WithCacheControl adds the cacheControl to the get characters character Id contacts labels o k response
func (o *GetCharactersCharacterIDContactsLabelsOK) WithCacheControl(cacheControl string) *GetCharactersCharacterIDContactsLabelsOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get characters character Id contacts labels o k response
func (o *GetCharactersCharacterIDContactsLabelsOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get characters character Id contacts labels o k response
func (o *GetCharactersCharacterIDContactsLabelsOK) WithExpires(expires string) *GetCharactersCharacterIDContactsLabelsOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get characters character Id contacts labels o k response
func (o *GetCharactersCharacterIDContactsLabelsOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get characters character Id contacts labels o k response
func (o *GetCharactersCharacterIDContactsLabelsOK) WithLastModified(lastModified string) *GetCharactersCharacterIDContactsLabelsOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get characters character Id contacts labels o k response
func (o *GetCharactersCharacterIDContactsLabelsOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get characters character Id contacts labels o k response
func (o *GetCharactersCharacterIDContactsLabelsOK) WithPayload(payload models.GetCharactersCharacterIDContactsLabelsOKBody) *GetCharactersCharacterIDContactsLabelsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id contacts labels o k response
func (o *GetCharactersCharacterIDContactsLabelsOK) SetPayload(payload models.GetCharactersCharacterIDContactsLabelsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDContactsLabelsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetCharactersCharacterIDContactsLabelsOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetCharactersCharacterIDContactsLabelsForbiddenCode is the HTTP code returned for type GetCharactersCharacterIDContactsLabelsForbidden
const GetCharactersCharacterIDContactsLabelsForbiddenCode int = 403

/*GetCharactersCharacterIDContactsLabelsForbidden Forbidden

swagger:response getCharactersCharacterIdContactsLabelsForbidden
*/
type GetCharactersCharacterIDContactsLabelsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDContactsLabelsForbiddenBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDContactsLabelsForbidden creates GetCharactersCharacterIDContactsLabelsForbidden with default headers values
func NewGetCharactersCharacterIDContactsLabelsForbidden() *GetCharactersCharacterIDContactsLabelsForbidden {
	return &GetCharactersCharacterIDContactsLabelsForbidden{}
}

// WithPayload adds the payload to the get characters character Id contacts labels forbidden response
func (o *GetCharactersCharacterIDContactsLabelsForbidden) WithPayload(payload *models.GetCharactersCharacterIDContactsLabelsForbiddenBody) *GetCharactersCharacterIDContactsLabelsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id contacts labels forbidden response
func (o *GetCharactersCharacterIDContactsLabelsForbidden) SetPayload(payload *models.GetCharactersCharacterIDContactsLabelsForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDContactsLabelsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCharactersCharacterIDContactsLabelsInternalServerErrorCode is the HTTP code returned for type GetCharactersCharacterIDContactsLabelsInternalServerError
const GetCharactersCharacterIDContactsLabelsInternalServerErrorCode int = 500

/*GetCharactersCharacterIDContactsLabelsInternalServerError Internal server error

swagger:response getCharactersCharacterIdContactsLabelsInternalServerError
*/
type GetCharactersCharacterIDContactsLabelsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetCharactersCharacterIDContactsLabelsInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetCharactersCharacterIDContactsLabelsInternalServerError creates GetCharactersCharacterIDContactsLabelsInternalServerError with default headers values
func NewGetCharactersCharacterIDContactsLabelsInternalServerError() *GetCharactersCharacterIDContactsLabelsInternalServerError {
	return &GetCharactersCharacterIDContactsLabelsInternalServerError{}
}

// WithPayload adds the payload to the get characters character Id contacts labels internal server error response
func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) WithPayload(payload *models.GetCharactersCharacterIDContactsLabelsInternalServerErrorBody) *GetCharactersCharacterIDContactsLabelsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get characters character Id contacts labels internal server error response
func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) SetPayload(payload *models.GetCharactersCharacterIDContactsLabelsInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCharactersCharacterIDContactsLabelsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
