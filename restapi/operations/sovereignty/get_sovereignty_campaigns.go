package sovereignty

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetSovereigntyCampaignsHandlerFunc turns a function with the right signature into a get sovereignty campaigns handler
type GetSovereigntyCampaignsHandlerFunc func(GetSovereigntyCampaignsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSovereigntyCampaignsHandlerFunc) Handle(params GetSovereigntyCampaignsParams) middleware.Responder {
	return fn(params)
}

// GetSovereigntyCampaignsHandler interface for that can handle valid get sovereignty campaigns params
type GetSovereigntyCampaignsHandler interface {
	Handle(GetSovereigntyCampaignsParams) middleware.Responder
}

// NewGetSovereigntyCampaigns creates a new http.Handler for the get sovereignty campaigns operation
func NewGetSovereigntyCampaigns(ctx *middleware.Context, handler GetSovereigntyCampaignsHandler) *GetSovereigntyCampaigns {
	return &GetSovereigntyCampaigns{Context: ctx, Handler: handler}
}

/*GetSovereigntyCampaigns swagger:route GET /sovereignty/campaigns/ Sovereignty getSovereigntyCampaigns

List sovereignty campaigns

Shows sovereignty data for campaigns.

---

Alternate route: `/v1/sovereignty/campaigns/`

Alternate route: `/legacy/sovereignty/campaigns/`

Alternate route: `/dev/sovereignty/campaigns/`


---

This route is cached for up to 5 seconds

*/
type GetSovereigntyCampaigns struct {
	Context *middleware.Context
	Handler GetSovereigntyCampaignsHandler
}

func (o *GetSovereigntyCampaigns) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetSovereigntyCampaignsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
