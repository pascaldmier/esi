package dogma

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetDogmaEffectsHandlerFunc turns a function with the right signature into a get dogma effects handler
type GetDogmaEffectsHandlerFunc func(GetDogmaEffectsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDogmaEffectsHandlerFunc) Handle(params GetDogmaEffectsParams) middleware.Responder {
	return fn(params)
}

// GetDogmaEffectsHandler interface for that can handle valid get dogma effects params
type GetDogmaEffectsHandler interface {
	Handle(GetDogmaEffectsParams) middleware.Responder
}

// NewGetDogmaEffects creates a new http.Handler for the get dogma effects operation
func NewGetDogmaEffects(ctx *middleware.Context, handler GetDogmaEffectsHandler) *GetDogmaEffects {
	return &GetDogmaEffects{Context: ctx, Handler: handler}
}

/*GetDogmaEffects swagger:route GET /dogma/effects/ Dogma getDogmaEffects

Get effects

Get a list of dogma effect ids

---

Alternate route: `/v1/dogma/effects/`

Alternate route: `/legacy/dogma/effects/`

Alternate route: `/dev/dogma/effects/`


---

This route expires daily at 11:05

*/
type GetDogmaEffects struct {
	Context *middleware.Context
	Handler GetDogmaEffectsHandler
}

func (o *GetDogmaEffects) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetDogmaEffectsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
