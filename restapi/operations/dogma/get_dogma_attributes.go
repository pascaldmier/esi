package dogma

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetDogmaAttributesHandlerFunc turns a function with the right signature into a get dogma attributes handler
type GetDogmaAttributesHandlerFunc func(GetDogmaAttributesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDogmaAttributesHandlerFunc) Handle(params GetDogmaAttributesParams) middleware.Responder {
	return fn(params)
}

// GetDogmaAttributesHandler interface for that can handle valid get dogma attributes params
type GetDogmaAttributesHandler interface {
	Handle(GetDogmaAttributesParams) middleware.Responder
}

// NewGetDogmaAttributes creates a new http.Handler for the get dogma attributes operation
func NewGetDogmaAttributes(ctx *middleware.Context, handler GetDogmaAttributesHandler) *GetDogmaAttributes {
	return &GetDogmaAttributes{Context: ctx, Handler: handler}
}

/*GetDogmaAttributes swagger:route GET /dogma/attributes/ Dogma getDogmaAttributes

Get attributes

Get a list of dogma attribute ids

---

Alternate route: `/v1/dogma/attributes/`

Alternate route: `/legacy/dogma/attributes/`

Alternate route: `/dev/dogma/attributes/`


---

This route expires daily at 11:05

*/
type GetDogmaAttributes struct {
	Context *middleware.Context
	Handler GetDogmaAttributesHandler
}

func (o *GetDogmaAttributes) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetDogmaAttributesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
