package alliance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pascaldmier/esi/models"
)

// GetAlliancesAllianceIDIconsOKCode is the HTTP code returned for type GetAlliancesAllianceIDIconsOK
const GetAlliancesAllianceIDIconsOKCode int = 200

/*GetAlliancesAllianceIDIconsOK Urls for icons for the given alliance id and server

swagger:response getAlliancesAllianceIdIconsOK
*/
type GetAlliancesAllianceIDIconsOK struct {
	/*The caching mechanism used
	  Required: true
	*/
	CacheControl string `json:"Cache-Control"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	Expires string `json:"Expires"`
	/*RFC7231 formatted datetime string
	  Required: true
	*/
	LastModified string `json:"Last-Modified"`

	/*
	  In: Body
	*/
	Payload *models.GetAlliancesAllianceIDIconsOKBody `json:"body,omitempty"`
}

// NewGetAlliancesAllianceIDIconsOK creates GetAlliancesAllianceIDIconsOK with default headers values
func NewGetAlliancesAllianceIDIconsOK() *GetAlliancesAllianceIDIconsOK {
	return &GetAlliancesAllianceIDIconsOK{}
}

// WithCacheControl adds the cacheControl to the get alliances alliance Id icons o k response
func (o *GetAlliancesAllianceIDIconsOK) WithCacheControl(cacheControl string) *GetAlliancesAllianceIDIconsOK {
	o.CacheControl = cacheControl
	return o
}

// SetCacheControl sets the cacheControl to the get alliances alliance Id icons o k response
func (o *GetAlliancesAllianceIDIconsOK) SetCacheControl(cacheControl string) {
	o.CacheControl = cacheControl
}

// WithExpires adds the expires to the get alliances alliance Id icons o k response
func (o *GetAlliancesAllianceIDIconsOK) WithExpires(expires string) *GetAlliancesAllianceIDIconsOK {
	o.Expires = expires
	return o
}

// SetExpires sets the expires to the get alliances alliance Id icons o k response
func (o *GetAlliancesAllianceIDIconsOK) SetExpires(expires string) {
	o.Expires = expires
}

// WithLastModified adds the lastModified to the get alliances alliance Id icons o k response
func (o *GetAlliancesAllianceIDIconsOK) WithLastModified(lastModified string) *GetAlliancesAllianceIDIconsOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the get alliances alliance Id icons o k response
func (o *GetAlliancesAllianceIDIconsOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithPayload adds the payload to the get alliances alliance Id icons o k response
func (o *GetAlliancesAllianceIDIconsOK) WithPayload(payload *models.GetAlliancesAllianceIDIconsOKBody) *GetAlliancesAllianceIDIconsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get alliances alliance Id icons o k response
func (o *GetAlliancesAllianceIDIconsOK) SetPayload(payload *models.GetAlliancesAllianceIDIconsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAlliancesAllianceIDIconsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Cache-Control

	cacheControl := o.CacheControl
	if cacheControl != "" {
		rw.Header().Set("Cache-Control", cacheControl)
	}

	// response header Expires

	expires := o.Expires
	if expires != "" {
		rw.Header().Set("Expires", expires)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAlliancesAllianceIDIconsNotFoundCode is the HTTP code returned for type GetAlliancesAllianceIDIconsNotFound
const GetAlliancesAllianceIDIconsNotFoundCode int = 404

/*GetAlliancesAllianceIDIconsNotFound No image server for this datasource

swagger:response getAlliancesAllianceIdIconsNotFound
*/
type GetAlliancesAllianceIDIconsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GetAlliancesAllianceIDIconsNotFoundBody `json:"body,omitempty"`
}

// NewGetAlliancesAllianceIDIconsNotFound creates GetAlliancesAllianceIDIconsNotFound with default headers values
func NewGetAlliancesAllianceIDIconsNotFound() *GetAlliancesAllianceIDIconsNotFound {
	return &GetAlliancesAllianceIDIconsNotFound{}
}

// WithPayload adds the payload to the get alliances alliance Id icons not found response
func (o *GetAlliancesAllianceIDIconsNotFound) WithPayload(payload *models.GetAlliancesAllianceIDIconsNotFoundBody) *GetAlliancesAllianceIDIconsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get alliances alliance Id icons not found response
func (o *GetAlliancesAllianceIDIconsNotFound) SetPayload(payload *models.GetAlliancesAllianceIDIconsNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAlliancesAllianceIDIconsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAlliancesAllianceIDIconsInternalServerErrorCode is the HTTP code returned for type GetAlliancesAllianceIDIconsInternalServerError
const GetAlliancesAllianceIDIconsInternalServerErrorCode int = 500

/*GetAlliancesAllianceIDIconsInternalServerError Internal server error

swagger:response getAlliancesAllianceIdIconsInternalServerError
*/
type GetAlliancesAllianceIDIconsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GetAlliancesAllianceIDIconsInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetAlliancesAllianceIDIconsInternalServerError creates GetAlliancesAllianceIDIconsInternalServerError with default headers values
func NewGetAlliancesAllianceIDIconsInternalServerError() *GetAlliancesAllianceIDIconsInternalServerError {
	return &GetAlliancesAllianceIDIconsInternalServerError{}
}

// WithPayload adds the payload to the get alliances alliance Id icons internal server error response
func (o *GetAlliancesAllianceIDIconsInternalServerError) WithPayload(payload *models.GetAlliancesAllianceIDIconsInternalServerErrorBody) *GetAlliancesAllianceIDIconsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get alliances alliance Id icons internal server error response
func (o *GetAlliancesAllianceIDIconsInternalServerError) SetPayload(payload *models.GetAlliancesAllianceIDIconsInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAlliancesAllianceIDIconsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
