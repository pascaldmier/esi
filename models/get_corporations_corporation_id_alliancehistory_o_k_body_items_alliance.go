package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetCorporationsCorporationIDAlliancehistoryOKBodyItemsAlliance get_corporations_corporation_id_alliancehistory_alliance
//
// alliance object
// swagger:model getCorporationsCorporationIdAlliancehistoryOKBodyItemsAlliance
type GetCorporationsCorporationIDAlliancehistoryOKBodyItemsAlliance struct {

	// get_corporations_corporation_id_alliancehistory_alliance_id
	//
	// alliance_id integer
	// Required: true
	AllianceID *int32 `json:"alliance_id"`

	// get_corporations_corporation_id_alliancehistory_is_deleted
	//
	// True if the alliance has been deleted
	// Required: true
	IsDeleted *bool `json:"is_deleted"`
}

// Validate validates this get corporations corporation Id alliancehistory o k body items alliance
func (m *GetCorporationsCorporationIDAlliancehistoryOKBodyItemsAlliance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAllianceID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateIsDeleted(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetCorporationsCorporationIDAlliancehistoryOKBodyItemsAlliance) validateAllianceID(formats strfmt.Registry) error {

	if err := validate.Required("alliance_id", "body", m.AllianceID); err != nil {
		return err
	}

	return nil
}

func (m *GetCorporationsCorporationIDAlliancehistoryOKBodyItemsAlliance) validateIsDeleted(formats strfmt.Registry) error {

	if err := validate.Required("is_deleted", "body", m.IsDeleted); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetCorporationsCorporationIDAlliancehistoryOKBodyItemsAlliance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetCorporationsCorporationIDAlliancehistoryOKBodyItemsAlliance) UnmarshalBinary(b []byte) error {
	var res GetCorporationsCorporationIDAlliancehistoryOKBodyItemsAlliance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
